/data/json/#Busan_since_2010-01-01_until_2019-10-26?2014.json
/data/json/#China_since_2019-10-27_until_2019-12-31?2019.json
/data/json/#Busan_since_2010-01-01_until_2019-10-26?2014.json
/data/json/#China_since_2019-10-27_until_2019-12-31?2019.json
/data/json/#Taipei_since_2010-01-02_until_2019-12-31?2015.json
/data/json/#Tokyo_since_2015-01-13_until_2015-11-09?2015.json
/data/json/#iingwen_since_2016-06-28_until_2019-12-31?2018.json
/data/json/#NewZealand_since_2010-01-01_until_2019-07-30?2016.json
/data/json/#Malaysia_since_2010-01-01_until_2019-10-26.json
/data/json/#India_since_2015-09-10_until_2015-12-02?2015.json
/data/json/#JuliaGillard_since_2010-06-24_until_2013-06-27?2013.json
/data/json/#Vietnam_since_2010-01-01_until_2019-12-31?2017.json
/data/json/#Manila_since_2010-01-01_until_2019-10-26?2013.json
/data/json/#Bombay_since_2010-01-01_until_2019-12-31?2015.json
/data/json/#Bangkok_since_2010-01-01_until_2018-10-16?2013.json
/data/json/#Thailand_since_2019-09-10_until_2019-12-31.json
/data/json/#Altankhuyag_since_2012-09-08_until_2014-11-05?2014.json
/data/json/#Japan_since_2018-11-17_until_2019-03-18?2019.json
/data/json/#HongKong_since_2010-01-01_until_2014-10-06?2011.json
/data/json/#Vietnam_since_2010-01-01_until_2019-12-31?2019.json
/data/json/#UnitedStates_since_2010-01-01_until_2019-10-26?2013.json
/data/json/#Colombo_since_2010-01-01_until_2019-12-31?2017.json
/data/json/#Japan_since_2019-01-21_until_2019-03-18.json
parse error: Expected separator between values at line 1, column 494
/data/json/#Colombo_since_2010-01-01_until_2019-12-31?2013.json
/data/json/#HoChiMinhCity_since_2010-01-01_until_2019-12-31?2013.json
/data/json/#Sydney_since_2016-12-18_until_2019-10-26?2019.json
/data/json/#SriLanka_since_2016-07-28_until_2019-12-31?2018.json
/data/json/#AbeShinzo_since_2019-03-15_until_2019-12-31?2019.json
/data/json/#Taipei_since_2010-01-02_until_2019-12-31?2017.json
/data/json/#Busan_since_2010-01-01_until_2019-10-26?2011.json
/data/json/#Dhaka_since_2019-10-27_until_2019-12-31?2019.json
/data/json/#PresRajapaksa_since_2013-01-14_until_2015-01-09?2015.json
/data/json/#India_since_2015-12-03_until_2017-11-17.json
./json_to_bert-csv.sh: line 3:  2466 Killed                  jq -r '.[] | [.text] | @csv' $file_name > /data/csv/$new_file
/data/json/#Bombay_since_2010-01-01_until_2019-12-31?2010.json
/data/json/#Australia_since_2011-06-16_until_2014-04-25?2014.json
/data/json/#HoChiMinhCity_since_2010-01-01_until_2019-12-31?2016.json
/data/json/#BarackObama_since_2013-10-01_until_2017-01-20?2013.json
/data/json/#Taipei_since_2010-01-02_until_2019-12-31?2018.json
/data/json/#Taipei_since_2010-01-02_until_2019-12-31?2012.json
/data/json/#China_since_2013-09-30_until_2013-12-06?2013.json
/data/json/#UnitedStates_since_2010-01-01_until_2019-10-26?2010.json
/data/json/#Mongolia_since_2010-01-01_until_2019-12-31?2013.json
/data/json/#jokowi_since_2018-07-19_until_2019-12-31?2019.json
/data/json/#NajibRazak_since_2010-01-07_until_2018-05-10?2012.json
/data/json/#NewYork_since_2016-06-25_until_2016-10-27?2016.json
/data/json/#Bangkok_since_2010-01-01_until_2018-10-16?2010.json
/data/json/#Japan_since_2015-03-24_until_2017-01-26.json
./json_to_bert-csv.sh: line 3:  2508 Killed                  jq -r '.[] | [.text] | @csv' $file_name > /data/csv/$new_file
/data/json/#NewYork_since_2012-11-08_until_2015-02-02.json
./json_to_bert-csv.sh: line 3:  2509 Killed                  jq -r '.[] | [.text] | @csv' $file_name > /data/csv/$new_file
/data/json/#Indonesia_since_2013-03-09_until_2013-03-25?2013.json
/data/json/#Japan_since_2018-12-09_until_2019-12-31.json
/data/json/#Indonesia_since_2018-08-16_until_2019-12-31?2019.json
/data/json/#Vietnam_since_2010-01-01_until_2019-11-23?2019.json
File already exists
/data/json/#Bangladesh_since_2010-01-01_until_2019-10-26?2012.json
/data/json/#Japan_since_2018-11-17_until_2019-03-18?2018.json
/data/json/#HongKong_since_2019-09-05_until_2019-11-27?2019.json
/data/json/#SouthKorea_since_2010-01-01_until_2014-11-20?2013.json
/data/json/#Vietnam_since_2010-01-01_until_2019-11-23?2017.json
/data/json/#leehsienloong_since_2010-04-15_until_2019-12-31?2019.json
/data/json/#Bangkok_since_2010-01-01_until_2018-10-16?2012.json
/data/json/#BarackObama_since_2013-10-01_until_2017-01-20?2014.json
/data/json/#Dhaka_since_2010-01-01_until_2019-10-26?2019.json
/data/json/#Vietnam_since_2010-01-01_until_2019-12-31?2018.json
/data/json/#Bangkok_since_2018-10-17_until_2019-12-31?2018.json
/data/json/#Mongolia_since_2010-01-01_until_2019-12-31?2018.json
/data/json/#Dhaka_since_2010-01-01_until_2019-10-26?2018.json
/data/json/#narendramodi_since_2014-11-14_until_2015-06-25?2014.json
/data/json/#Indonesia_since_2013-08-28_until_2018-08-15.json
./json_to_bert-csv.sh: line 3:  2529 Killed                  jq -r '.[] | [.text] | @csv' $file_name > /data/csv/$new_file
/data/json/#noynoyaquino_since_2010-06-30_until_2016-06-30?2013.json
/data/json/#Sydney_since_2019-10-27_until_2019-12-31?2019.json
/data/json/#NajibRazak_since_2010-01-07_until_2018-05-10?2017.json
/data/json/#AbeShinzo_since_2012-12-26_until_2019-03-14?2015.json
/data/json/#HongKong_since_2010-01-01_until_2014-10-06?2014.json
/data/json/#TurnbullMalcolm_since_2015-09-15_until_2018-08-24?2018.json
/data/json/#Taiwan_since_2016-12-14_until_2019-12-31?2018.json
/data/json/#Japan_since_2019-03-19_until_2019-05-25?2019.json
/data/json/#China_since_2018-09-01_until_2019-10-26?2018.json
/data/json/#Vietnam_since_2010-01-01_until_2019-12-31?2016.json
/data/json/#Tokyo_since_2010-01-01_until_2015-01-12?2010.json
/data/json/#Ulaanbaatar_since_2010-01-01_until_2019-12-31?2011.json
/data/json/#JuliaGillard_since_2010-06-24_until_2013-06-27?2010.json
/data/json/#leehsienloong_since_2010-04-15_until_2019-12-31?2013.json
/data/json/#Colombo_since_2010-01-01_until_2019-12-31?2014.json
/data/json/#NajibRazak_since_2010-01-07_until_2018-05-10?2018.json
/data/json/#India_since_2017-11-18_until_2018-09-29?2017.json
/data/json/#Wellington_since_2018-11-12_until_2019-12-31?2019.json
/data/json/#Australia_since_2017-01-13_until_2019-04-10?2019.json
/data/json/#Singapore_since_2010-01-01_until_2019-04-19.json
./json_to_bert-csv.sh: line 3:  2550 Killed                  jq -r '.[] | [.text] | @csv' $file_name > /data/csv/$new_file
/data/json/#SouthKorea_since_2014-11-21_until_2019-12-31?2014.json
/data/json/#HoChiMinhCity_since_2010-01-01_until_2019-12-31?2018.json
/data/json/#AbeShinzo_since_2012-12-26_until_2019-03-14?2019.json
/data/json/#Mongolia_since_2010-01-01_until_2019-12-31?2017.json
/data/json/#Taiwan_since_2010-01-01_until_2016-12-13?2016.json
/data/json/#jokowi_since_2014-10-20_until_2018-07-18?2018.json
/data/json/#Sydney_since_2016-12-18_until_2019-10-26?2017.json
/data/json/#Taiwan_since_2010-01-01_until_2016-12-13?2015.json
/data/json/#China_since_2013-12-07_until_2014-11-18?2013.json
/data/json/#NaotoKan_since_2010-06-08_until_2011-09-02?2011.json
/data/json/#sheikhhasina_since_2011-01-27_until_2019-10-26?2014.json
/data/json/#NewZealand_since_2010-01-01_until_2019-07-30?2013.json
/data/json/#Japan_since_2016-06-30_until_2017-01-26.json
parse error: Expected separator between values at line 1, column 585
/data/json/#SriLanka_since_2011-09-17_until_2016-07-27?2012.json
/data/json/#Tokyo_since_2015-11-10_until_2017-09-06?2016.json
/data/json/#HoChiMinhCity_since_2010-01-01_until_2019-12-31?2011.json
/data/json/#nguyentandung_since_2010-01-21_until_2016-04-06?2015.json
/data/json/#Jakarta_since_2010-01-01_until_2012-07-28?2010.json
/data/json/#Bangladesh_since_2010-01-01_until_2019-10-26?2011.json
/data/json/#Tokyo_since_2017-09-07_until_2019-07-13?2019.json
/data/json/#China_since_2018-02-13_until_2018-02-27?2018.json
/data/json/#China_since_2014-11-19_until_2018-02-12.json
./json_to_bert-csv.sh: line 3:  2572 Killed                  jq -r '.[] | [.text] | @csv' $file_name > /data/csv/$new_file
/data/json/#JuliaGillard_since_2010-06-24_until_2013-06-27?2012.json
/data/json/#Shanghai_since_2011-08-20_until_2019-10-26?2016.json
/data/json/#moonriver365_since_2017-05-10_until_2019-12-31?2018.json
/data/json/#Taipei_since_2010-01-02_until_2019-12-31?2016.json
/data/json/#DonaldTsang_since_2010-01-16_until_2012-06-30?2012.json
/data/json/#HoChiMinhCity_since_2010-01-01_until_2019-12-31?2012.json
/data/json/#Tokyo_since_2010-01-01_until_2015-01-12?2013.json
/data/json/#Vietnam_since_2010-01-01_until_2019-12-31?2011.json
/data/json/#narendramodi_since_2014-05-26_until_2014-11-13?2014.json
/data/json/#UnitedStates_since_2010-01-01_until_2019-10-26?2019.json
/data/json/#Vietnam_since_2010-01-01_until_2019-11-23?2010.json
/data/json/#BarackObama_since_2010-01-01_until_2013-09-30?2012.json
/data/json/#Altankhuyag_since_2012-09-08_until_2014-11-05?2013.json
/data/json/#NewZealand_since_2010-01-01_until_2019-07-30?2012.json
/data/json/#CarrieLam_since_2017-07-01_until_2019-12-31?2017.json
/data/json/#Japan_since_2017-10-24_until_2017-12-07?2017.json
/data/json/#iingwen_since_2016-06-28_until_2019-12-31?2016.json
/data/json/#noynoyaquino_since_2010-06-30_until_2016-06-30?2014.json
/data/json/#hujintao_since_2010-01-04_until_2013-03-14?2011.json
/data/json/#Taiwan_since_2016-12-14_until_2019-12-31?2019.json
/data/json/#Tokyo_since_2010-01-01_until_2015-01-12?2014.json
/data/json/#Indonesia_since_2010-01-01_until_2013-03-08?2011.json
/data/json/#leehsienloong_since_2010-04-15_until_2019-12-31?2016.json
/data/json/#Bangladesh_since_2010-01-01_until_2019-10-26?2010.json
/data/json/#Jakarta_since_2012-11-25_until_2013-06-06?2013.json
/data/json/#HongKong_since_2015-07-05_until_2019-09-04?2019.json
/data/json/#Japan_since_2017-12-08_until_2018-09-05?2017.json
/data/json/#Japan_since_2010-01-01_until_2015-03-23.json
./json_to_bert-csv.sh: line 3:  2603 Killed                  jq -r '.[] | [.text] | @csv' $file_name > /data/csv/$new_file
/data/json/#Pakistan_since_2016-08-24_until_2018-09-08?2016.json
/data/json/#RRD_Davao_since_2016-06-30_until_2019-12-31?0.json
/data/json/#Dhaka_since_2010-01-01_until_2019-10-26?2016.json
/data/json/#Australia_since_2017-01-13_until_2019-04-10?2017.json
/data/json/#ScottMorrisonMP_since_2018-08-24_until_2019-10-26?2018.json
/data/json/#Pakistan_since_2013-10-26_until_2016-08-23.json
./json_to_bert-csv.sh: line 3:  2611 Killed                  jq -r '.[] | [.text] | @csv' $file_name > /data/csv/$new_file
/data/json/#SriLanka_since_2011-09-17_until_2016-07-27?2013.json
/data/json/#Shanghai_since_2011-08-20_until_2019-10-26?2012.json
/data/json/#Taiwan_since_2010-01-01_until_2016-12-13?2013.json
/data/json/#NewYork_since_2015-02-03_until_2016-06-24?2015.json
/data/json/#SouthKorea_since_2014-11-21_until_2019-12-31?2017.json
/data/json/#NawazSharif_since_2013-06-05_until_2017-07-28?2016.json
/data/json/#Australia_since_2019-10-27_until_2019-12-31?2019.json
/data/json/#SouthKorea_since_2010-01-01_until_2014-11-20?2011.json
/data/json/#Ulaanbaatar_since_2010-01-01_until_2019-12-31?2019.json
/data/json/#KualaLumpur_since_2010-01-01_until_2019-10-26?2017.json
/data/json/#Malaysia_since_2019-10-27_until_2019-12-31?2019.json
/data/json/#SriLanka_since_2016-07-28_until_2019-12-31?2017.json
/data/json/#sheikhhasina_since_2019-10-27_until_2019-12-31?2019.json
/data/json/#Wellington_since_2010-01-02_until_2018-11-11?2012.json
/data/json/#Mongolia_since_2010-01-01_until_2019-12-31?2010.json
/data/json/#PouYingluck_since_2011-08-06_until_2014-05-07?2014.json
/data/json/#RajaPervaizAshraf_since_2012-06-22_until_2013-03-24?2013.json
/data/json/#KualaLumpur_since_2010-01-01_until_2019-10-26?2012.json
/data/json/#narendramodi_since_2015-06-26_until_2019-12-31?2019.json
/data/json/#ScottMorrisonMP_since_2018-08-24_until_2019-10-26?2019.json
/data/json/#Vietnam_since_2010-01-01_until_2019-11-23?2011.json
/data/json/#NawazSharif_since_2013-06-05_until_2017-07-28?2015.json
/data/json/#Bangkok_since_2018-10-17_until_2019-12-31?2019.json
/data/json/#narendramodi_since_2014-11-14_until_2015-06-25?2015.json
/data/json/#nguyentandung_since_2010-01-21_until_2016-04-06?2014.json
/data/json/#Manila_since_2010-01-01_until_2019-10-26?2015.json
/data/json/#HongKong_since_2015-07-05_until_2019-09-04?2015.json
/data/json/#SouthKorea_since_2010-01-01_until_2014-11-20?2014.json
/data/json/#Wellington_since_2010-01-02_until_2018-11-11?2011.json
/data/json/#Jakarta_since_2017-07-11_until_2018-03-22?2017.json
/data/json/#Jakarta_since_2012-11-25_until_2013-06-06?2012.json
/data/json/#Thailand_since_2018-01-05_until_2019-09-09?2018.json
/data/json/#China_since_2018-09-01_until_2019-10-26?2019.json
/data/json/#jokowi_since_2018-07-19_until_2019-12-31?2018.json
/data/json/#Thailand_since_2018-01-05_until_2019-09-09?2019.json
/data/json/#India_since_2018-09-30_until_2019-01-03?2018.json
/data/json/#Manila_since_2010-01-01_until_2019-10-26?2012.json
/data/json/#NewYork_since_2016-10-28_until_2019-06-28?2017.json
/data/json/#Shanghai_since_2011-08-20_until_2019-10-26?2014.json
/data/json/#Indonesia_since_2013-03-26_until_2013-08-27?2013.json
/data/json/#Bombay_since_2010-01-01_until_2019-12-31?2019.json
/data/json/#AbeShinzo_since_2012-12-26_until_2019-03-14?2018.json
/data/json/#KualaLumpur_since_2010-01-01_until_2019-10-26?2018.json
/data/json/#leehsienloong_since_2010-04-15_until_2019-12-31?2018.json
/data/json/#AbeShinzo_since_2012-12-26_until_2019-03-14?2013.json
/data/json/#YRGillani_since_2011-08-01_until_2012-06-19?2012.json
/data/json/#nguyentandung_since_2010-01-21_until_2016-04-06?2011.json
/data/json/#XiJingpingReal_since_2018-07-13_until_2019-10-26?2019.json
/data/json/#Wellington_since_2010-01-02_until_2018-11-11?2018.json
/data/json/#Mongolia_since_2010-01-01_until_2019-12-31?2019.json
/data/json/#hujintao_since_2010-01-04_until_2013-03-14?2010.json
/data/json/#noynoyaquino_since_2010-06-30_until_2016-06-30?2015.json
/data/json/#Colombo_since_2010-01-01_until_2019-12-31?2015.json
/data/json/#Shanghai_since_2010-01-01_until_2011-08-19?2010.json
/data/json/#realDonaldTrump_since_2017-01-20_until_2019-11-26?2017.json
/data/json/#UnitedStates_since_2010-01-01_until_2019-10-26?2017.json
/data/json/#Bangkok_since_2010-01-01_until_2018-10-16?2015.json
/data/json/#NawazSharif_since_2013-06-05_until_2017-07-28?2014.json
/data/json/#Indonesia_since_2010-01-01_until_2013-03-08?2010.json
/data/json/#BarackObama_since_2010-01-01_until_2013-09-30?2010.json
/data/json/#NewZealand_since_2010-01-01_until_2019-07-30?2011.json
/data/json/#SouthKorea_since_2014-11-21_until_2019-12-31?2015.json
/data/json/#Vietnam_since_2010-01-01_until_2019-11-23?2015.json
/data/json/#Bombay_since_2010-01-01_until_2019-12-31?2014.json
/data/json/#HongKong_since_2010-01-01_until_2014-10-06?2012.json
/data/json/#Japan_since_2017-12-08_until_2018-09-05?2018.json
/data/json/#NewZealand_since_2010-01-01_until_2019-07-30?2019.json
/data/json/#Bangkok_since_2010-01-01_until_2018-10-16?2011.json
/data/json/#khurelsukh_since_2017-10-04_until_2019-12-31?2017.json
/data/json/#SouthKorea_since_2014-11-21_until_2019-12-31?2016.json
/data/json/#HoChiMinhCity_since_2010-01-01_until_2019-12-31?2017.json
/data/json/#KualaLumpur_since_2010-01-01_until_2019-10-26?2015.json
/data/json/#Jakarta_since_2018-03-23_until_2019-12-31?2019.json
/data/json/#NewYork_since_2016-10-28_until_2019-06-28?2016.json
/data/json/#Bangladesh_since_2010-01-01_until_2019-10-26?2015.json
/data/json/#PresRajapaksa_since_2013-01-14_until_2015-01-09?2014.json
/data/json/#Colombo_since_2010-01-01_until_2019-12-31?2010.json
/data/json/#narendramodi_since_2015-06-26_until_2019-12-31?2017.json
/data/json/#India_since_2019-01-04_until_2019-10-19?2019.json
/data/json/#Vietnam_since_2010-01-01_until_2019-12-31?2015.json
/data/json/#leehsienloong_since_2010-04-15_until_2019-12-31?2012.json
/data/json/#leehsienloong_since_2010-04-15_until_2019-12-31?2017.json
/data/json/#Tokyo_since_2010-01-01_until_2015-01-12?2011.json
/data/json/#jokowi_since_2014-10-20_until_2018-07-18?2015.json
/data/json/#noynoyaquino_since_2010-06-30_until_2016-06-30?2010.json
/data/json/#sheikhhasina_since_2011-01-27_until_2019-10-26?2013.json
/data/json/#BarackObama_since_2013-10-01_until_2017-01-20?2016.json
/data/json/#NewYork_since_2010-01-01_until_2012-11-07?2010.json
/data/json/#Busan_since_2010-01-01_until_2019-10-26?2012.json
/data/json/#GH_PARK_since_2013-03-03_until_2017-03-10?0.json
/data/json/#KualaLumpur_since_2010-01-01_until_2019-10-26?2010.json
/data/json/#Wellington_since_2010-01-02_until_2018-11-11?2013.json
/data/json/#sheikhhasina_since_2011-01-27_until_2019-10-26?2015.json
/data/json/#Jakarta_since_2013-06-07_until_2017-07-10.json
./json_to_bert-csv.sh: line 3:  2708 Killed                  jq -r '.[] | [.text] | @csv' $file_name > /data/csv/$new_file
/data/json/#YRGillani_since_2011-08-01_until_2012-06-19?2011.json
/data/json/#Dhaka_since_2010-01-01_until_2019-10-26?2012.json
/data/json/#Bombay_since_2010-01-01_until_2019-12-31?2017.json
/data/json/#hujintao_since_2010-01-04_until_2013-03-14?2012.json
/data/json/#SouthKorea_since_2014-11-21_until_2019-12-31?2019.json
/data/json/#Saikhanbileg_since_2014-11-21_until_2016-07-07?2016.json
/data/json/#Colombo_since_2010-01-01_until_2019-12-31?2012.json
/data/json/#Tokyo_since_2017-09-07_until_2019-07-13?2018.json
/data/json/#NewYork_since_2010-01-01_until_2012-11-07?2011.json
/data/json/#leehsienloong_since_2010-04-15_until_2019-12-31?2011.json
/data/json/#Ulaanbaatar_since_2010-01-01_until_2019-12-31?2014.json
/data/json/#chedetofficial_since_2018-05-10_until_2019-12-31?2018.json
/data/json/#RajaPervaizAshraf_since_2012-06-22_until_2013-03-24?2012.json
/data/json/#Bangkok_since_2010-01-01_until_2018-10-16?2016.json
/data/json/#Taipei_since_2010-01-02_until_2019-12-31?2019.json
/data/json/#Jakarta_since_2018-03-23_until_2019-12-31?2018.json
/data/json/#Mongolia_since_2010-01-01_until_2019-12-31?2014.json
/data/json/#TurnbullMalcolm_since_2015-09-15_until_2018-08-24?2015.json
/data/json/#Thailand_since_2017-01-28_until_2017-01-29.json
/data/json/#Ulaanbaatar_since_2010-01-01_until_2019-12-31?2017.json
/data/json/#NewZealand_since_2010-01-01_until_2019-07-30?2015.json
/data/json/#Vietnam_since_2010-01-01_until_2019-12-31?2012.json
/data/json/#Bangkok_since_2010-01-01_until_2018-10-16?2017.json
/data/json/#NajibRazak_since_2010-01-07_until_2018-05-10?2010.json
/data/json/#nguyentandung_since_2010-01-21_until_2016-04-06?2013.json
/data/json/#CarrieLam_since_2017-07-01_until_2019-12-31?2019.json
/data/json/#Tokyo_since_2017-09-07_until_2019-07-13?2017.json
/data/json/#khurelsukh_since_2017-10-04_until_2019-12-31?2019.json
/data/json/#Bombay_since_2010-01-01_until_2019-12-31?2016.json
/data/json/#Sydney_since_2015-11-07_until_2016-12-17.json
parse error: Expected separator between values at line 1, column 492
/data/json/#NajibRazak_since_2010-01-07_until_2018-05-10?2016.json
/data/json/#narendramodi_since_2015-06-26_until_2019-12-31?2016.json
/data/json/#Taiwan_since_2010-01-01_until_2016-12-13?2014.json
/data/json/#Wellington_since_2010-01-02_until_2018-11-11?2017.json
/data/json/#realDonaldTrump_since_2019-11-27_until_2019-12-31?2019.json
/data/json/#Vietnam_since_2010-01-01_until_2019-12-31?2014.json
/data/json/#KualaLumpur_since_2010-01-01_until_2019-10-26?2014.json
/data/json/#BarackObama_since_2010-01-01_until_2013-09-30?2011.json
/data/json/#leehsienloong_since_2010-04-15_until_2019-12-31?2015.json
/data/json/#noynoyaquino_since_2010-06-30_until_2016-06-30?2012.json
/data/json/#Bombay_since_2010-01-01_until_2019-12-31?2013.json
/data/json/#MaithripalaS_since_2015-05-27_until_2019-12-31?2018.json
/data/json/#Australia_since_2011-06-16_until_2014-04-25?2012.json
/data/json/#sheikhhasina_since_2011-01-27_until_2019-10-26?2018.json
/data/json/#khurelsukh_since_2017-10-04_until_2019-12-31?2018.json
/data/json/#Taipei_since_2010-01-02_until_2019-12-31?2013.json
/data/json/#DonaldTsang_since_2010-01-16_until_2012-06-30?2011.json
/data/json/#Bangladesh_since_2019-10-27_until_2019-12-31?2019.json
/data/json/#Vietnam_since_2010-01-01_until_2019-11-23?2012.json
/data/json/#Thailand_since_2010-01-01_until_2017-01-27.json
./json_to_bert-csv.sh: line 3:  2762 Killed                  jq -r '.[] | [.text] | @csv' $file_name > /data/csv/$new_file
/data/json/#SriLanka_since_2011-09-17_until_2016-07-27?2015.json
/data/json/#Ulaanbaatar_since_2010-01-01_until_2019-12-31?2012.json
/data/json/#NawazSharif_since_2013-06-05_until_2017-07-28?2013.json
/data/json/#SriLanka_since_2016-07-28_until_2019-12-31?2016.json
/data/json/#sheikhhasina_since_2011-01-27_until_2019-10-26?2011.json
/data/json/#hujintao_since_2010-01-04_until_2013-03-14?2013.json
/data/json/#chedetofficial_since_2018-05-10_until_2019-12-31?2019.json
/data/json/#Indonesia_since_2010-01-01_until_2013-03-08?2012.json
/data/json/#Japan_since_2018-09-24_until_2018-11-16?2018.json
/data/json/#PouYingluck_since_2011-08-06_until_2014-05-07?2011.json
/data/json/#iingwen_since_2016-06-28_until_2019-12-31?2019.json
/data/json/#Karachi_since_2010-01-01_until_2019-12-31.json
./json_to_bert-csv.sh: line 3:  2775 Killed                  jq -r '.[] | [.text] | @csv' $file_name > /data/csv/$new_file
/data/json/#KualaLumpur_since_2010-01-01_until_2019-10-26?2016.json
/data/json/#HoChiMinhCity_since_2010-01-01_until_2019-12-31?2010.json
/data/json/#NajibRazak_since_2010-01-07_until_2018-05-10?2015.json
/data/json/#leehsienloong_since_2010-04-15_until_2019-12-31?2014.json
/data/json/#moonriver365_since_2017-05-10_until_2019-12-31?2019.json
/data/json/#sheikhhasina_since_2011-01-27_until_2019-10-26?2019.json
/data/json/#Vietnam_since_2010-01-01_until_2019-12-31?2013.json
/data/json/#Sydney_since_2016-12-18_until_2019-10-26?2018.json
/data/json/#Tokyo_since_2019-10-19_until_2019-12-31?2019.json
/data/json/#Taipei_since_2010-01-02_until_2019-12-31?2014.json
/data/json/#Busan_since_2010-01-01_until_2019-10-26?2013.json
/data/json/#noynoyaquino_since_2010-06-30_until_2016-06-30?2011.json
/data/json/#Jakarta_since_2010-01-01_until_2012-07-28?2012.json
/data/json/#HongKong_since_2015-07-05_until_2019-09-04?2018.json
/data/json/#Jakarta_since_2017-07-11_until_2018-03-22?2018.json
/data/json/#NewZealand_since_2010-01-01_until_2019-07-30?2014.json
/data/json/#Colombo_since_2010-01-01_until_2019-12-31?2018.json
/data/json/#KualaLumpur_since_2010-01-01_until_2019-10-26?2011.json
/data/json/#Busan_since_2010-01-01_until_2019-10-26?2010.json
/data/json/#Busan_since_2010-01-01_until_2019-10-26?2019.json
/data/json/#Colombo_since_2010-01-01_until_2019-12-31?2011.json
/data/json/#Jakarta_since_2012-07-29_until_2012-11-24?2012.json
/data/json/#Australia_since_2014-04-26_until_2014-06-21?2014.json
/data/json/#NewZealand_since_2010-01-01_until_2019-07-30?2017.json
/data/json/#UnitedStates_since_2010-01-01_until_2019-10-26?2016.json
/data/json/#Mongolia_since_2010-01-01_until_2019-12-31?2012.json
/data/json/#Pakistan_since_2013-05-16_until_2013-10-25?2013.json
/data/json/#DonaldTsang_since_2010-01-16_until_2012-06-30?2010.json
/data/json/#realDonaldTrump_since_2017-01-20_until_2019-11-26?2018.json
/data/json/#ScottMorrisonMP_since_2019-10-28_until_2019-12-31?2019.json
/data/json/#Sydney_since_2010-01-01_until_2016-12-17.json
./json_to_bert-csv.sh: line 3:  2806 Killed                  jq -r '.[] | [.text] | @csv' $file_name > /data/csv/$new_file
/data/json/#UnitedStates_since_2010-01-01_until_2019-10-26?2015.json
/data/json/#Pakistan_since_2016-02-24_until_2016-08-23.json
parse error: Expected separator between values at line 1, column 459
/data/json/#jokowi_since_2014-10-20_until_2018-07-18?2016.json
/data/json/#SouthKorea_since_2014-11-21_until_2019-12-31?2018.json
/data/json/#Abhisit_DP_since_2011-05-15_until_2019-12-31?0.json
/data/json/#Mongolia_since_2010-01-01_until_2019-12-31?2016.json
/data/json/#Australia_since_2019-04-11_until_2019-10-26?2019.json
/data/json/#NaotoKan_since_2010-06-08_until_2011-09-02?2010.json
/data/json/#Bangladesh_since_2018-04-18_until_2019-10-26?2019.json
/data/json/#XiJingpingReal_since_2018-07-13_until_2019-10-26?2018.json
/data/json/#Manila_since_2010-01-01_until_2019-10-26?2011.json
/data/json/#JuliaGillard_since_2010-06-24_until_2013-06-27?2011.json
/data/json/#BarackObama_since_2013-10-01_until_2017-01-20?2017.json
/data/json/#PresRajapaksa_since_2013-01-14_until_2015-01-09?2013.json
/data/json/#HoChiMinhCity_since_2010-01-01_until_2019-12-31?2014.json
/data/json/#Bangladesh_since_2010-01-01_until_2019-10-26?2019.json
/data/json/#Vietnam_since_2010-01-01_until_2019-11-23?2018.json
/data/json/#TurnbullMalcolm_since_2015-09-15_until_2018-08-24?2017.json
/data/json/#NewYork_since_2019-10-27_until_2019-12-31?2019.json
/data/json/#Taiwan_since_2010-01-01_until_2016-12-13?2011.json
/data/json/#Bombay_since_2010-01-01_until_2019-12-31?2018.json
/data/json/#NewYork_since_2010-01-01_until_2012-11-07?2012.json
/data/json/#Manila_since_2010-01-01_until_2019-10-26?2017.json
/data/json/#Shanghai_since_2010-01-01_until_2011-08-19?2011.json
/data/json/#Australia_since_2014-06-22_until_2017-01-12.json
./json_to_bert-csv.sh: line 3:  2833 Killed                  jq -r '.[] | [.text] | @csv' $file_name > /data/csv/$new_file
/data/json/#SriLanka_since_2016-07-28_until_2019-12-31?2019.json
/data/json/#noynoyaquino_since_2010-06-30_until_2016-06-30?2016.json
/data/json/#Singapore_since_2017-05-19_until_2019-04-19.json
parse error: Expected separator between values at line 1, column 546
/data/json/#Manila_since_2010-01-01_until_2019-10-26?2010.json
/data/json/#Pakistan_since_2018-09-09_until_2019-12-31?2018.json
/data/json/#Saikhanbileg_since_2014-11-21_until_2016-07-07?2015.json
/data/json/#India_since_2013-03-14_until_2014-06-03?2013.json
/data/json/#Indonesia_since_2018-08-16_until_2019-12-31?2018.json
/data/json/#Busan_since_2010-01-01_until_2019-10-26?2017.json
/data/json/#sheikhhasina_since_2011-01-27_until_2019-10-26?2012.json
/data/json/#PresidentLee_since_2010-01-19_until_2013-02-25.json
parse error: Expected value before ',' at line 1, column 473
/data/json/#Mongolia_since_2010-01-01_until_2019-12-31?2015.json
/data/json/#HongKong_since_2014-10-07_until_2015-07-04?2014.json
/data/json/#Bangladesh_since_2010-01-01_until_2019-10-26?2013.json
/data/json/#nguyentandung_since_2010-01-21_until_2016-04-06?2016.json
/data/json/#SriLanka_since_2010-01-01_until_2011-09-16?2010.json
/data/json/#SriLanka_since_2011-09-17_until_2016-07-27?2011.json
/data/json/#Pakistan_since_2018-09-09_until_2019-12-31?2019.json
/data/json/#Taiwan_since_2010-01-01_until_2016-12-13?2010.json
/data/json/#China_since_2013-12-07_until_2014-11-18?2014.json
/data/json/#Indonesia_since_2010-01-01_until_2013-03-08?2013.json
/data/json/#India_since_2010-01-01_until_2013-03-13.json
./json_to_bert-csv.sh: line 3:  2855 Killed                  jq -r '.[] | [.text] | @csv' $file_name > /data/csv/$new_file
/data/json/#nguyentandung_since_2010-01-21_until_2016-04-06?2010.json
/data/json/#Shanghai_since_2011-08-20_until_2019-10-26?2013.json
/data/json/#Wellington_since_2018-11-12_until_2019-12-31?2018.json
/data/json/#erdenebat_since_2016-07-13_until_2017-10-04?2016.json
/data/json/#BarackObama_since_2013-10-01_until_2017-01-20?2015.json
/data/json/#ImranKhanPTI_since_2018-08-18_until_2019-12-31?2018.json
/data/json/#Tokyo_since_2010-01-01_until_2015-01-12?2012.json
/data/json/#Shanghai_since_2011-08-20_until_2019-10-26?2015.json
/data/json/#NewZealand_since_2010-01-01_until_2019-07-30?2018.json
/data/json/#MaithripalaS_since_2015-05-27_until_2019-12-31?2016.json
/data/json/#Singapore_since_2019-04-20_until_2019-12-31?2019.json
/data/json/#MaithripalaS_since_2015-05-27_until_2019-12-31?2015.json
/data/json/#Manila_since_2010-01-01_until_2019-10-26?2019.json
/data/json/#HongKong_since_2015-07-05_until_2019-09-04?2016.json
/data/json/#Pakistan_since_2016-08-24_until_2018-09-08?2017.json
/data/json/#prayutofficial_since_2018-10-14_until_2019-12-31?2018.json
/data/json/#Bangladesh_since_2010-01-01_until_2019-10-26?2016.json
/data/json/#PouYingluck_since_2011-08-06_until_2014-05-07?2012.json
/data/json/#narendramodi_since_2015-06-26_until_2019-12-31?2018.json
/data/json/#India_since_2019-10-29_until_2019-12-31?2019.json
/data/json/#UnitedStates_since_2010-01-01_until_2019-10-26?2014.json
/data/json/#HoChiMinhCity_since_2010-01-01_until_2019-12-31?2019.json
/data/json/#Dhaka_since_2010-01-01_until_2019-10-26?2017.json
/data/json/#Dhaka_since_2010-01-01_until_2019-10-26?2013.json
/data/json/#Japan_since_2018-09-06_until_2018-09-23?2018.json
/data/json/#India_since_2017-11-18_until_2018-09-29?2018.json
/data/json/#Thailand_since_2018-01-05_until_2019-09-09.json
/data/json/#HongKong_since_2010-01-01_until_2014-10-06?2010.json
/data/json/#hatoyamayukio_since_2010-01-01_until_2010-06-08?2010.json
/data/json/#Manila_since_2019-10-27_until_2019-12-31?2019.json
/data/json/#HoChiMinhCity_since_2010-01-01_until_2019-12-31?2015.json
/data/json/#Shanghai_since_2011-08-20_until_2019-10-26?2018.json
/data/json/#Ulaanbaatar_since_2010-01-01_until_2019-12-31?2013.json
/data/json/#China_since_2010-01-01_until_2013-09-29.json
./json_to_bert-csv.sh: line 3:  2894 Killed                  jq -r '.[] | [.text] | @csv' $file_name > /data/csv/$new_file
/data/json/#leehsienloong_since_2010-04-15_until_2019-12-31?2010.json
/data/json/#Saikhanbileg_since_2014-11-21_until_2016-07-07?2014.json
/data/json/#Bangladesh_since_2010-01-01_until_2019-10-26?2017.json
/data/json/#India_since_2019-10-20_until_2019-10-28?2019.json
/data/json/#Bangkok_since_2010-01-01_until_2018-10-16?2014.json
/data/json/#Wellington_since_2010-01-02_until_2018-11-11?2010.json
/data/json/#erdenebat_since_2016-07-13_until_2017-10-04?2017.json
/data/json/#Colombo_since_2010-01-01_until_2019-12-31?2019.json
/data/json/#NewZealand_since_2019-07-31_until_2019-12-31?2019.json
/data/json/#Tokyo_since_2015-11-10_until_2017-09-06?2017.json
/data/json/#Thailand_since_2017-01-30_until_2018-01-04.json
/data/json/#UnitedStates_since_2010-01-01_until_2019-10-26?2018.json
/data/json/#Jakarta_since_2010-01-01_until_2012-07-28?2011.json
/data/json/#Busan_since_2010-01-01_until_2019-10-26?2016.json
/data/json/#Bombay_since_2010-01-01_until_2019-12-31?2012.json
/data/json/#HongKong_since_2010-01-01_until_2014-10-06?2013.json
/data/json/#MaithripalaS_since_2015-05-27_until_2019-12-31?2017.json
/data/json/#Japan_since_2019-05-26_until_2019-12-08?2019.json
/data/json/#Sydney_since_2016-12-18_until_2019-10-26?2016.json
/data/json/#sheikhhasina_since_2011-01-27_until_2019-10-26?2017.json
/data/json/#Colombo_since_2010-01-01_until_2019-12-31?2016.json
/data/json/#BarackObama_since_2010-01-01_until_2013-09-30?2013.json
/data/json/#NajibRazak_since_2010-01-07_until_2018-05-10?2011.json
/data/json/#SBYudhoyono_since_2013-04-13_until_2014-10-20?2014.json
/data/json/#China_since_2018-02-28_until_2018-08-31?2018.json
/data/json/#SriLanka_since_2010-01-01_until_2011-09-16?2011.json
/data/json/#HongKong_since_2014-10-07_until_2015-07-04?2015.json
/data/json/#moonriver365_since_2017-05-10_until_2019-12-31?2017.json
/data/json/#Shanghai_since_2011-08-20_until_2019-10-26?2017.json
/data/json/#Japan_since_2017-01-27_until_2017-10-23?2017.json
/data/json/#Australia_since_2011-06-16_until_2014-04-25?2013.json
/data/json/#SriLanka_since_2011-09-17_until_2016-07-27?2016.json
/data/json/#NajibRazak_since_2010-01-07_until_2018-05-10?2014.json
/data/json/#MaithripalaS_since_2015-05-27_until_2019-12-31?2019.json
/data/json/#sheikhhasina_since_2011-01-27_until_2019-10-26?2016.json
/data/json/#narendramodi_since_2015-06-26_until_2019-12-31?2015.json
/data/json/#NewYork_since_2016-10-28_until_2019-06-28?2018.json
/data/json/#Bombay_since_2010-01-01_until_2019-12-31?2011.json
/data/json/#Shanghai_since_2011-08-20_until_2019-10-26?2019.json
/data/json/#nguyentandung_since_2010-01-21_until_2016-04-06?2012.json
/data/json/#CarrieLam_since_2017-07-01_until_2019-12-31?2018.json
/data/json/#Vietnam_since_2010-01-01_until_2019-12-31?2010.json
/data/json/#SouthKorea_since_2010-01-01_until_2014-11-20?2012.json
/data/json/#Taiwan_since_2016-12-14_until_2019-12-31?2017.json
/data/json/#Wellington_since_2010-01-02_until_2018-11-11?2014.json
/data/json/#India_since_2018-09-30_until_2019-01-03?2019.json
/data/json/#Taiwan_since_2016-12-14_until_2019-12-31?2016.json
/data/json/#HongKong_since_2019-11-28_until_2019-12-31?2019.json
/data/json/#Taipei_since_2010-01-02_until_2019-12-31?2010.json
/data/json/#SouthKorea_since_2010-01-01_until_2014-11-20?2010.json
/data/json/#NewYork_since_2019-06-29_until_2019-10-26?2019.json
/data/json/#UnitedStates_since_2010-01-01_until_2019-10-26?2012.json
/data/json/#Thailand_since_2019-09-10_until_2019-12-31?2019.json
/data/json/#NewZealand_since_2010-01-01_until_2019-07-30?2010.json
/data/json/#Bangladesh_since_2018-04-18_until_2019-10-26?2018.json
/data/json/#KualaLumpur_since_2010-01-01_until_2019-10-26?2019.json
/data/json/#Wellington_since_2010-01-02_until_2018-11-11?2015.json
/data/json/#Philippines_since_2010-01-01_until_2019-10-26.json
/data/json/#prayutofficial_since_2018-10-14_until_2019-12-31?2019.json
/data/json/#Manila_since_2010-01-01_until_2019-10-26?2014.json
/data/json/#Tokyo_since_2019-07-14_until_2019-10-18?2019.json
/data/json/#Dhaka_since_2010-01-01_until_2019-10-26?2010.json
/data/json/#NajibRazak_since_2010-01-07_until_2018-05-10?2013.json
/data/json/#jacindaardern_since_2017-10-26_until_2019-12-31?2018.json
/data/json/#Australia_since_2010-01-01_until_2011-06-15?2011.json
/data/json/#Vietnam_since_2010-01-01_until_2019-11-23?2013.json
/data/json/#Vietnam_since_2010-01-01_until_2019-11-23?2016.json
/data/json/#UnitedStates_since_2019-10-27_until_2019-12-31?2019.json
/data/json/#KualaLumpur_since_2010-01-01_until_2019-10-26?2013.json
/data/json/#iingwen_since_2016-06-28_until_2019-12-31?2017.json
/data/json/#AbeShinzo_since_2012-12-26_until_2019-03-14?2012.json
/data/json/#Wellington_since_2010-01-02_until_2018-11-11?2016.json
/data/json/#NewYork_since_2015-02-03_until_2016-06-24?2016.json
/data/json/#SriLanka_since_2011-09-17_until_2016-07-27?2014.json
/data/json/#Taipei_since_2010-01-02_until_2019-12-31?2011.json
/data/json/#Bangkok_since_2010-01-01_until_2018-10-16?2018.json
/data/json/#AbeShinzo_since_2012-12-26_until_2019-03-14?2017.json
/data/json/#Ulaanbaatar_since_2010-01-01_until_2019-12-31?2016.json
/data/json/#Bangladesh_since_2010-01-01_until_2019-10-26?2018.json
/data/json/#Taiwan_since_2010-01-01_until_2016-12-13?2012.json
/data/json/#Vietnam_since_2010-01-01_until_2019-11-23?2014.json
/data/json/#realDonaldTrump_since_2017-01-20_until_2019-11-26?2019.json
/data/json/#jokowi_since_2014-10-20_until_2018-07-18?2014.json
/data/json/#Malaysia_since_2014-10-26_until_2019-10-26.json
parse error: Expected separator between values at line 1, column 705
/data/json/#Dhaka_since_2010-01-01_until_2019-10-26?2011.json
/data/json/#Altankhuyag_since_2012-09-08_until_2014-11-05?2012.json
/data/json/#jacindaardern_since_2017-10-26_until_2019-12-31?2019.json
/data/json/#Shanghai_since_2019-10-27_until_2019-12-31?2019.json
/data/json/#Ulaanbaatar_since_2010-01-01_until_2019-12-31?2018.json
/data/json/#India_since_2014-06-04_until_2015-09-09.json
/data/json/#NewYork_since_2016-10-28_until_2019-06-28?2019.json
/data/json/#Dhaka_since_2010-01-01_until_2019-10-26?2015.json
/data/json/#Shanghai_since_2011-08-20_until_2019-10-26?2011.json
/data/json/#jacindaardern_since_2017-10-26_until_2019-12-31?2017.json
/data/json/#Busan_since_2019-10-27_until_2019-12-31?2019.json
/data/json/#ImranKhanPTI_since_2018-08-18_until_2019-12-31?2019.json
/data/json/#Australia_since_2010-01-01_until_2011-06-15?2010.json
/data/json/#AbeShinzo_since_2012-12-26_until_2019-03-14?2016.json
/data/json/#Busan_since_2010-01-01_until_2019-10-26?2018.json
/data/json/#ManmohanSinghPM_since_2010-08-03_until_2014-05-26.json
parse error: Expected separator between values at line 1, column 465
/data/json/#NawazSharif_since_2013-06-05_until_2017-07-28?2017.json
/data/json/#HonTonyAbbott_since_2015-05-03_until_2015-09-15?2015.json
/data/json/#Pakistan_since_2010-01-01_until_2013-05-15.json
./json_to_bert-csv.sh: line 3:  3000 Killed                  jq -r '.[] | [.text] | @csv' $file_name > /data/csv/$new_file
/data/json/#HongKong_since_2015-07-05_until_2019-09-04?2017.json
/data/json/#Manila_since_2010-01-01_until_2019-10-26?2018.json
/data/json/#Tokyo_since_2015-11-10_until_2017-09-06?2015.json
/data/json/#PouYingluck_since_2011-08-06_until_2014-05-07?2013.json
/data/json/#India_since_2013-03-14_until_2014-06-03?2014.json
/data/json/#Mongolia_since_2010-01-01_until_2019-12-31?2011.json
/data/json/#Australia_since_2017-01-13_until_2019-04-10?2018.json
/data/json/#jokowi_since_2014-10-20_until_2018-07-18?2017.json
/data/json/#Tokyo_since_2010-01-01_until_2015-01-12?2015.json
/data/json/#Philippines_since_2019-10-27_until_2019-12-31?2019.json
/data/json/#KualaLumpur_since_2019-10-27_until_2019-12-31?2019.json
/data/json/#Ulaanbaatar_since_2010-01-01_until_2019-12-31?2010.json
/data/json/#Bangladesh_since_2010-01-01_until_2019-10-26?2014.json
/data/json/#Busan_since_2010-01-01_until_2019-10-26?2015.json
/data/json/#Dhaka_since_2010-01-01_until_2019-10-26?2014.json
/data/json/#Ulaanbaatar_since_2010-01-01_until_2019-12-31?2015.json
/data/json/#UnitedStates_since_2010-01-01_until_2019-10-26?2011.json
/data/json/#SBYudhoyono_since_2013-04-13_until_2014-10-20?2013.json
/data/json/#Australia_since_2011-06-16_until_2014-04-25?2011.json
/data/json/#AbeShinzo_since_2012-12-26_until_2019-03-14?2014.json
/data/json/#Manila_since_2010-01-01_until_2019-10-26?2016.json
/data/json/#TurnbullMalcolm_since_2015-09-15_until_2018-08-24?2016.json
/data/json/#Pakistan_since_2016-08-24_until_2018-09-08?2018.json
/home/fyp19020/.local/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:516: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint8 = np.dtype([("qint8", np.int8, 1)])
/home/fyp19020/.local/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:517: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint8 = np.dtype([("quint8", np.uint8, 1)])
/home/fyp19020/.local/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:518: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint16 = np.dtype([("qint16", np.int16, 1)])
/home/fyp19020/.local/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:519: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint16 = np.dtype([("quint16", np.uint16, 1)])
/home/fyp19020/.local/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:520: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint32 = np.dtype([("qint32", np.int32, 1)])
/home/fyp19020/.local/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:525: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  np_resource = np.dtype([("resource", np.ubyte, 1)])
/home/fyp19020/.local/lib/python3.6/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:541: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint8 = np.dtype([("qint8", np.int8, 1)])
/home/fyp19020/.local/lib/python3.6/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:542: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint8 = np.dtype([("quint8", np.uint8, 1)])
/home/fyp19020/.local/lib/python3.6/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:543: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint16 = np.dtype([("qint16", np.int16, 1)])
/home/fyp19020/.local/lib/python3.6/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:544: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint16 = np.dtype([("quint16", np.uint16, 1)])
/home/fyp19020/.local/lib/python3.6/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:545: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint32 = np.dtype([("qint32", np.int32, 1)])
/home/fyp19020/.local/lib/python3.6/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:550: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  np_resource = np.dtype([("resource", np.ubyte, 1)])
WARNING:tensorflow:From /home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/test_bert/optimization.py:87: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.

WARNING:tensorflow:From /home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/test_bert/run_classifier.py:1023: The name tf.app.run is deprecated. Please use tf.compat.v1.app.run instead.

WARNING:tensorflow:From /home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/test_bert/run_classifier.py:825: The name tf.logging.set_verbosity is deprecated. Please use tf.compat.v1.logging.set_verbosity instead.

W0203 00:26:13.748172 139887672751936 deprecation_wrapper.py:119] From /home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/test_bert/run_classifier.py:825: The name tf.logging.set_verbosity is deprecated. Please use tf.compat.v1.logging.set_verbosity instead.

WARNING:tensorflow:From /home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/test_bert/run_classifier.py:825: The name tf.logging.INFO is deprecated. Please use tf.compat.v1.logging.INFO instead.

W0203 00:26:13.748437 139887672751936 deprecation_wrapper.py:119] From /home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/test_bert/run_classifier.py:825: The name tf.logging.INFO is deprecated. Please use tf.compat.v1.logging.INFO instead.

WARNING:tensorflow:From /home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/test_bert/modeling.py:93: The name tf.gfile.GFile is deprecated. Please use tf.io.gfile.GFile instead.

W0203 00:26:13.748971 139887672751936 deprecation_wrapper.py:119] From /home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/test_bert/modeling.py:93: The name tf.gfile.GFile is deprecated. Please use tf.io.gfile.GFile instead.

WARNING:tensorflow:From /home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/test_bert/run_classifier.py:850: The name tf.gfile.MakeDirs is deprecated. Please use tf.io.gfile.makedirs instead.

W0203 00:26:13.783156 139887672751936 deprecation_wrapper.py:119] From /home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/test_bert/run_classifier.py:850: The name tf.gfile.MakeDirs is deprecated. Please use tf.io.gfile.makedirs instead.

WARNING:tensorflow:
The TensorFlow contrib module will not be included in TensorFlow 2.0.
For more information, please see:
  * https://github.com/tensorflow/community/blob/master/rfcs/20180907-contrib-sunset.md
  * https://github.com/tensorflow/addons
  * https://github.com/tensorflow/io (for I/O related ops)
If you depend on functionality not listed there, please file an issue.

W0203 00:26:15.827063 139887672751936 lazy_loader.py:50] 
The TensorFlow contrib module will not be included in TensorFlow 2.0.
For more information, please see:
  * https://github.com/tensorflow/community/blob/master/rfcs/20180907-contrib-sunset.md
  * https://github.com/tensorflow/addons
  * https://github.com/tensorflow/io (for I/O related ops)
If you depend on functionality not listed there, please file an issue.

WARNING:tensorflow:Estimator's model_fn (<function model_fn_builder.<locals>.model_fn at 0x7f39f645c8c8>) includes params argument, but params are not passed to Estimator.
W0203 00:26:15.827757 139887672751936 estimator.py:1984] Estimator's model_fn (<function model_fn_builder.<locals>.model_fn at 0x7f39f645c8c8>) includes params argument, but params are not passed to Estimator.
INFO:tensorflow:Using config: {'_model_dir': '/home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/data/bert_result', '_tf_random_seed': None, '_save_summary_steps': 100, '_save_checkpoints_steps': 1000, '_save_checkpoints_secs': None, '_session_config': allow_soft_placement: true
graph_options {
  rewrite_options {
    meta_optimizer_iterations: ONE
  }
}
, '_keep_checkpoint_max': 5, '_keep_checkpoint_every_n_hours': 10000, '_log_step_count_steps': None, '_train_distribute': None, '_device_fn': None, '_protocol': None, '_eval_distribute': None, '_experimental_distribute': None, '_experimental_max_worker_delay_secs': None, '_service': None, '_cluster_spec': <tensorflow.python.training.server_lib.ClusterSpec object at 0x7f39f2714b00>, '_task_type': 'worker', '_task_id': 0, '_global_id_in_cluster': 0, '_master': '', '_evaluation_master': '', '_is_chief': True, '_num_ps_replicas': 0, '_num_worker_replicas': 1, '_tpu_config': TPUConfig(iterations_per_loop=1000, num_shards=8, num_cores_per_replica=None, per_host_input_for_training=3, tpu_job_name=None, initial_infeed_sleep_secs=None, input_partition_dims=None, eval_training_input_configuration=2), '_cluster': None}
I0203 00:26:15.830360 139887672751936 estimator.py:209] Using config: {'_model_dir': '/home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/data/bert_result', '_tf_random_seed': None, '_save_summary_steps': 100, '_save_checkpoints_steps': 1000, '_save_checkpoints_secs': None, '_session_config': allow_soft_placement: true
graph_options {
  rewrite_options {
    meta_optimizer_iterations: ONE
  }
}
, '_keep_checkpoint_max': 5, '_keep_checkpoint_every_n_hours': 10000, '_log_step_count_steps': None, '_train_distribute': None, '_device_fn': None, '_protocol': None, '_eval_distribute': None, '_experimental_distribute': None, '_experimental_max_worker_delay_secs': None, '_service': None, '_cluster_spec': <tensorflow.python.training.server_lib.ClusterSpec object at 0x7f39f2714b00>, '_task_type': 'worker', '_task_id': 0, '_global_id_in_cluster': 0, '_master': '', '_evaluation_master': '', '_is_chief': True, '_num_ps_replicas': 0, '_num_worker_replicas': 1, '_tpu_config': TPUConfig(iterations_per_loop=1000, num_shards=8, num_cores_per_replica=None, per_host_input_for_training=3, tpu_job_name=None, initial_infeed_sleep_secs=None, input_partition_dims=None, eval_training_input_configuration=2), '_cluster': None}
INFO:tensorflow:_TPUContext: eval_on_tpu True
I0203 00:26:15.832266 139887672751936 tpu_context.py:209] _TPUContext: eval_on_tpu True
WARNING:tensorflow:eval_on_tpu ignored because use_tpu is False.
W0203 00:26:15.833544 139887672751936 tpu_context.py:211] eval_on_tpu ignored because use_tpu is False.
WARNING:tensorflow:From /home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/test_bert/run_classifier.py:524: The name tf.python_io.TFRecordWriter is deprecated. Please use tf.io.TFRecordWriter instead.

W0203 00:26:16.222032 139887672751936 deprecation_wrapper.py:119] From /home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/test_bert/run_classifier.py:524: The name tf.python_io.TFRecordWriter is deprecated. Please use tf.io.TFRecordWriter instead.

WARNING:tensorflow:From /home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/test_bert/run_classifier.py:528: The name tf.logging.info is deprecated. Please use tf.compat.v1.logging.info instead.

W0203 00:26:16.245080 139887672751936 deprecation_wrapper.py:119] From /home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/test_bert/run_classifier.py:528: The name tf.logging.info is deprecated. Please use tf.compat.v1.logging.info instead.

INFO:tensorflow:Writing example 0 of 137648
I0203 00:26:16.245169 139887672751936 run_classifier.py:528] Writing example 0 of 137648
INFO:tensorflow:*** Example ***
I0203 00:26:16.265418 139887672751936 run_classifier.py:502] *** Example ***
INFO:tensorflow:guid: test-0
I0203 00:26:16.265505 139887672751936 run_classifier.py:503] guid: test-0
INFO:tensorflow:tokens: [CLS] " | live now | # nye # count ##down plus # fire ##works in # taip ##ei # meer ##kat http : / / m ##rk . tv / 1 ##k ##w ##f ##v ##7 ##7 " [SEP]
I0203 00:26:16.265578 139887672751936 run_classifier.py:505] tokens: [CLS] " | live now | # nye # count ##down plus # fire ##works in # taip ##ei # meer ##kat http : / / m ##rk . tv / 1 ##k ##w ##f ##v ##7 ##7 " [SEP]
INFO:tensorflow:input_ids: 101 107 196 12962 11858 196 108 17731 108 47777 27160 10563 108 13559 51778 10106 108 25943 11998 108 12705 14735 10556 131 120 120 181 16299 119 19767 120 122 10174 10874 10575 10477 11305 11305 107 102 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
I0203 00:26:16.265659 139887672751936 run_classifier.py:506] input_ids: 101 107 196 12962 11858 196 108 17731 108 47777 27160 10563 108 13559 51778 10106 108 25943 11998 108 12705 14735 10556 131 120 120 181 16299 119 19767 120 122 10174 10874 10575 10477 11305 11305 107 102 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
INFO:tensorflow:input_mask: 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
I0203 00:26:16.265752 139887672751936 run_classifier.py:507] input_mask: 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
INFO:tensorflow:segment_ids: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
I0203 00:26:16.265822 139887672751936 run_classifier.py:508] segment_ids: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
INFO:tensorflow:label: 0 (id = 0)
I0203 00:26:16.265876 139887672751936 run_classifier.py:509] label: 0 (id = 0)
INFO:tensorflow:*** Example ***
I0203 00:26:16.266562 139887672751936 run_classifier.py:502] *** Example ***
INFO:tensorflow:guid: test-1
I0203 00:26:16.266645 139887672751936 run_classifier.py:503] guid: test-1
INFO:tensorflow:tokens: [CLS] " wish ##ing everyone a very # happy ##ne ##wy ##ear # 2016 ! # who ##tel # sp ##gli ##fe # taip ##ei @ w taip ##ei https : / / www . ins ##tag ##ram . com / p / _ 9 ##k ##p ##7 ##em ##0 ##km / " [SEP]
I0203 00:26:16.266737 139887672751936 run_classifier.py:505] tokens: [CLS] " wish ##ing everyone a very # happy ##ne ##wy ##ear # 2016 ! # who ##tel # sp ##gli ##fe # taip ##ei @ w taip ##ei https : / / www . ins ##tag ##ram . com / p / _ 9 ##k ##p ##7 ##em ##0 ##km / " [SEP]
INFO:tensorflow:input_ids: 101 107 66069 10230 48628 169 12558 108 54214 10238 12524 34321 108 10255 106 108 10479 15636 108 32650 20986 14601 108 25943 11998 137 191 25943 11998 14120 131 120 120 10494 119 15498 24603 13845 119 10212 120 184 120 168 130 10174 10410 11305 10451 10929 23440 120 107 102 0 0 0 0 0 0 0 0 0 0
I0203 00:26:16.266824 139887672751936 run_classifier.py:506] input_ids: 101 107 66069 10230 48628 169 12558 108 54214 10238 12524 34321 108 10255 106 108 10479 15636 108 32650 20986 14601 108 25943 11998 137 191 25943 11998 14120 131 120 120 10494 119 15498 24603 13845 119 10212 120 184 120 168 130 10174 10410 11305 10451 10929 23440 120 107 102 0 0 0 0 0 0 0 0 0 0
INFO:tensorflow:input_mask: 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0
I0203 00:26:16.266888 139887672751936 run_classifier.py:507] input_mask: 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0
INFO:tensorflow:segment_ids: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
I0203 00:26:16.266946 139887672751936 run_classifier.py:508] segment_ids: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
INFO:tensorflow:label: 0 (id = 0)
I0203 00:26:16.266994 139887672751936 run_classifier.py:509] label: 0 (id = 0)
INFO:tensorflow:*** Example ***
I0203 00:26:16.267250 139887672751936 run_classifier.py:502] *** Example ***
INFO:tensorflow:guid: test-2
I0203 00:26:16.267320 139887672751936 run_classifier.py:503] guid: test-2
INFO:tensorflow:tokens: [CLS] " by ##e by ##e # 2015 [SEP]
I0203 00:26:16.267375 139887672751936 run_classifier.py:505] tokens: [CLS] " by ##e by ##e # 2015 [SEP]
INFO:tensorflow:input_ids: 101 107 10155 10112 10155 10112 108 10222 102 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
I0203 00:26:16.267441 139887672751936 run_classifier.py:506] input_ids: 101 107 10155 10112 10155 10112 108 10222 102 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
INFO:tensorflow:input_mask: 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
I0203 00:26:16.267667 139887672751936 run_classifier.py:507] input_mask: 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
INFO:tensorflow:segment_ids: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
I0203 00:26:16.267985 139887672751936 run_classifier.py:508] segment_ids: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
INFO:tensorflow:label: 0 (id = 0)
I0203 00:26:16.268243 139887672751936 run_classifier.py:509] label: 0 (id = 0)
INFO:tensorflow:*** Example ***
I0203 00:26:16.269252 139887672751936 run_classifier.py:502] *** Example ***
INFO:tensorflow:guid: test-3
I0203 00:26:16.269535 139887672751936 run_classifier.py:503] guid: test-3
INFO:tensorflow:tokens: [CLS] hi # 2016 [SEP]
I0203 00:26:16.269759 139887672751936 run_classifier.py:505] tokens: [CLS] hi # 2016 [SEP]
INFO:tensorflow:input_ids: 101 11520 108 10255 102 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
I0203 00:26:16.270082 139887672751936 run_classifier.py:506] input_ids: 101 11520 108 10255 102 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
INFO:tensorflow:input_mask: 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
I0203 00:26:16.270338 139887672751936 run_classifier.py:507] input_mask: 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
INFO:tensorflow:segment_ids: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
I0203 00:26:16.270577 139887672751936 run_classifier.py:508] segment_ids: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
INFO:tensorflow:label: 0 (id = 0)
I0203 00:26:16.270770 139887672751936 run_classifier.py:509] label: 0 (id = 0)
INFO:tensorflow:*** Example ***
I0203 00:26:16.271862 139887672751936 run_classifier.py:502] *** Example ***
INFO:tensorflow:guid: test-4
I0203 00:26:16.271957 139887672751936 run_classifier.py:503] guid: test-4
INFO:tensorflow:tokens: [CLS] 倒 數 開 始 [SEP]
I0203 00:26:16.272023 139887672751936 run_classifier.py:505] tokens: [CLS] 倒 數 開 始 [SEP]
INFO:tensorflow:input_ids: 101 2336 4310 8133 3268 102 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
I0203 00:26:16.272112 139887672751936 run_classifier.py:506] input_ids: 101 2336 4310 8133 3268 102 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
INFO:tensorflow:input_mask: 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
I0203 00:26:16.272188 139887672751936 run_classifier.py:507] input_mask: 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
INFO:tensorflow:segment_ids: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
I0203 00:26:16.272255 139887672751936 run_classifier.py:508] segment_ids: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
INFO:tensorflow:label: 0 (id = 0)
I0203 00:26:16.272316 139887672751936 run_classifier.py:509] label: 0 (id = 0)
INFO:tensorflow:Writing example 10000 of 137648
I0203 00:26:19.745297 139887672751936 run_classifier.py:528] Writing example 10000 of 137648
INFO:tensorflow:Writing example 20000 of 137648
I0203 00:26:23.049761 139887672751936 run_classifier.py:528] Writing example 20000 of 137648
INFO:tensorflow:Writing example 30000 of 137648
I0203 00:26:26.420640 139887672751936 run_classifier.py:528] Writing example 30000 of 137648
INFO:tensorflow:Writing example 40000 of 137648
I0203 00:26:29.588587 139887672751936 run_classifier.py:528] Writing example 40000 of 137648
INFO:tensorflow:Writing example 50000 of 137648
I0203 00:26:32.910237 139887672751936 run_classifier.py:528] Writing example 50000 of 137648
INFO:tensorflow:Writing example 60000 of 137648
I0203 00:26:36.419856 139887672751936 run_classifier.py:528] Writing example 60000 of 137648
INFO:tensorflow:Writing example 70000 of 137648
I0203 00:26:39.831300 139887672751936 run_classifier.py:528] Writing example 70000 of 137648
INFO:tensorflow:Writing example 80000 of 137648
I0203 00:26:43.001466 139887672751936 run_classifier.py:528] Writing example 80000 of 137648
INFO:tensorflow:Writing example 90000 of 137648
I0203 00:26:46.106788 139887672751936 run_classifier.py:528] Writing example 90000 of 137648
INFO:tensorflow:Writing example 100000 of 137648
I0203 00:26:49.755652 139887672751936 run_classifier.py:528] Writing example 100000 of 137648
INFO:tensorflow:Writing example 110000 of 137648
I0203 00:26:53.678874 139887672751936 run_classifier.py:528] Writing example 110000 of 137648
INFO:tensorflow:Writing example 120000 of 137648
I0203 00:26:57.759826 139887672751936 run_classifier.py:528] Writing example 120000 of 137648
INFO:tensorflow:Writing example 130000 of 137648
I0203 00:27:01.696920 139887672751936 run_classifier.py:528] Writing example 130000 of 137648
INFO:tensorflow:***** Running prediction*****
I0203 00:27:04.425608 139887672751936 run_classifier.py:986] ***** Running prediction*****
INFO:tensorflow:  Num examples = 137648 (137648 actual, 0 padding)
I0203 00:27:04.425789 139887672751936 run_classifier.py:989]   Num examples = 137648 (137648 actual, 0 padding)
INFO:tensorflow:  Batch size = 8
I0203 00:27:04.425865 139887672751936 run_classifier.py:990]   Batch size = 8
WARNING:tensorflow:From /home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/test_bert/run_classifier.py:555: The name tf.FixedLenFeature is deprecated. Please use tf.io.FixedLenFeature instead.

W0203 00:27:04.426295 139887672751936 deprecation_wrapper.py:119] From /home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/test_bert/run_classifier.py:555: The name tf.FixedLenFeature is deprecated. Please use tf.io.FixedLenFeature instead.

INFO:tensorflow:***** Predict results *****
I0203 00:27:04.426425 139887672751936 run_classifier.py:1004] ***** Predict results *****
INFO:tensorflow:Could not find trained model in model_dir: /home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/data/bert_result, running initialization to predict.
I0203 00:27:04.426693 139887672751936 estimator.py:612] Could not find trained model in model_dir: /home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/data/bert_result, running initialization to predict.
WARNING:tensorflow:From /home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/test_bert/run_classifier.py:591: map_and_batch (from tensorflow.contrib.data.python.ops.batching) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.map_and_batch(...)`.
W0203 00:27:04.626681 139887672751936 deprecation.py:323] From /home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/test_bert/run_classifier.py:591: map_and_batch (from tensorflow.contrib.data.python.ops.batching) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.map_and_batch(...)`.
WARNING:tensorflow:From /home/fyp19020/.local/lib/python3.6/site-packages/tensorflow/contrib/data/python/ops/batching.py:273: map_and_batch (from tensorflow.python.data.experimental.ops.batching) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.map(map_func, num_parallel_calls)` followed by `tf.data.Dataset.batch(batch_size, drop_remainder)`. Static tf.data optimizations will take care of using the fused implementation.
W0203 00:27:04.626968 139887672751936 deprecation.py:323] From /home/fyp19020/.local/lib/python3.6/site-packages/tensorflow/contrib/data/python/ops/batching.py:273: map_and_batch (from tensorflow.python.data.experimental.ops.batching) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.map(map_func, num_parallel_calls)` followed by `tf.data.Dataset.batch(batch_size, drop_remainder)`. Static tf.data optimizations will take care of using the fused implementation.
WARNING:tensorflow:From /home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/test_bert/run_classifier.py:564: The name tf.parse_single_example is deprecated. Please use tf.io.parse_single_example instead.

W0203 00:27:04.628207 139887672751936 deprecation_wrapper.py:119] From /home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/test_bert/run_classifier.py:564: The name tf.parse_single_example is deprecated. Please use tf.io.parse_single_example instead.

WARNING:tensorflow:From /home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/test_bert/run_classifier.py:571: to_int32 (from tensorflow.python.ops.math_ops) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.cast` instead.
W0203 00:27:04.650400 139887672751936 deprecation.py:323] From /home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/test_bert/run_classifier.py:571: to_int32 (from tensorflow.python.ops.math_ops) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.cast` instead.
INFO:tensorflow:Calling model_fn.
I0203 00:27:04.665024 139887672751936 estimator.py:1145] Calling model_fn.
INFO:tensorflow:Running infer on CPU
I0203 00:27:04.665173 139887672751936 tpu_estimator.py:2965] Running infer on CPU
INFO:tensorflow:*** Features ***
I0203 00:27:04.665413 139887672751936 run_classifier.py:668] *** Features ***
INFO:tensorflow:  name = input_ids, shape = (?, 64)
I0203 00:27:04.665519 139887672751936 run_classifier.py:670]   name = input_ids, shape = (?, 64)
INFO:tensorflow:  name = input_mask, shape = (?, 64)
I0203 00:27:04.665603 139887672751936 run_classifier.py:670]   name = input_mask, shape = (?, 64)
INFO:tensorflow:  name = is_real_example, shape = (?,)
I0203 00:27:04.665678 139887672751936 run_classifier.py:670]   name = is_real_example, shape = (?,)
INFO:tensorflow:  name = label_ids, shape = (?,)
I0203 00:27:04.665747 139887672751936 run_classifier.py:670]   name = label_ids, shape = (?,)
INFO:tensorflow:  name = segment_ids, shape = (?, 64)
I0203 00:27:04.665819 139887672751936 run_classifier.py:670]   name = segment_ids, shape = (?, 64)
WARNING:tensorflow:From /home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/test_bert/modeling.py:171: The name tf.variable_scope is deprecated. Please use tf.compat.v1.variable_scope instead.

W0203 00:27:04.690797 139887672751936 deprecation_wrapper.py:119] From /home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/test_bert/modeling.py:171: The name tf.variable_scope is deprecated. Please use tf.compat.v1.variable_scope instead.

WARNING:tensorflow:From /home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/test_bert/modeling.py:409: The name tf.get_variable is deprecated. Please use tf.compat.v1.get_variable instead.

W0203 00:27:04.691992 139887672751936 deprecation_wrapper.py:119] From /home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/test_bert/modeling.py:409: The name tf.get_variable is deprecated. Please use tf.compat.v1.get_variable instead.

WARNING:tensorflow:From /home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/test_bert/modeling.py:490: The name tf.assert_less_equal is deprecated. Please use tf.compat.v1.assert_less_equal instead.

W0203 00:27:04.713873 139887672751936 deprecation_wrapper.py:119] From /home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/test_bert/modeling.py:490: The name tf.assert_less_equal is deprecated. Please use tf.compat.v1.assert_less_equal instead.

WARNING:tensorflow:From /home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/test_bert/modeling.py:671: dense (from tensorflow.python.layers.core) is deprecated and will be removed in a future version.
Instructions for updating:
Use keras.layers.dense instead.
W0203 00:27:04.764774 139887672751936 deprecation.py:323] From /home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/test_bert/modeling.py:671: dense (from tensorflow.python.layers.core) is deprecated and will be removed in a future version.
Instructions for updating:
Use keras.layers.dense instead.
WARNING:tensorflow:From /home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/test_bert/run_classifier.py:702: The name tf.train.init_from_checkpoint is deprecated. Please use tf.compat.v1.train.init_from_checkpoint instead.

W0203 00:27:06.617046 139887672751936 deprecation_wrapper.py:119] From /home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/test_bert/run_classifier.py:702: The name tf.train.init_from_checkpoint is deprecated. Please use tf.compat.v1.train.init_from_checkpoint instead.

INFO:tensorflow:**** Trainable Variables ****
I0203 00:27:07.058909 139887672751936 run_classifier.py:704] **** Trainable Variables ****
INFO:tensorflow:  name = bert/embeddings/word_embeddings:0, shape = (119547, 768), *INIT_FROM_CKPT*
I0203 00:27:07.059090 139887672751936 run_classifier.py:710]   name = bert/embeddings/word_embeddings:0, shape = (119547, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/embeddings/token_type_embeddings:0, shape = (2, 768), *INIT_FROM_CKPT*
I0203 00:27:07.059192 139887672751936 run_classifier.py:710]   name = bert/embeddings/token_type_embeddings:0, shape = (2, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/embeddings/position_embeddings:0, shape = (512, 768), *INIT_FROM_CKPT*
I0203 00:27:07.059270 139887672751936 run_classifier.py:710]   name = bert/embeddings/position_embeddings:0, shape = (512, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/embeddings/LayerNorm/beta:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.059344 139887672751936 run_classifier.py:710]   name = bert/embeddings/LayerNorm/beta:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/embeddings/LayerNorm/gamma:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.059412 139887672751936 run_classifier.py:710]   name = bert/embeddings/LayerNorm/gamma:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_0/attention/self/query/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
I0203 00:27:07.059477 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_0/attention/self/query/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_0/attention/self/query/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.059548 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_0/attention/self/query/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_0/attention/self/key/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
I0203 00:27:07.059621 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_0/attention/self/key/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_0/attention/self/key/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.059692 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_0/attention/self/key/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_0/attention/self/value/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
I0203 00:27:07.059756 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_0/attention/self/value/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_0/attention/self/value/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.059835 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_0/attention/self/value/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_0/attention/output/dense/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
I0203 00:27:07.059901 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_0/attention/output/dense/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_0/attention/output/dense/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.059969 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_0/attention/output/dense/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_0/attention/output/LayerNorm/beta:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.060033 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_0/attention/output/LayerNorm/beta:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_0/attention/output/LayerNorm/gamma:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.060143 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_0/attention/output/LayerNorm/gamma:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_0/intermediate/dense/kernel:0, shape = (768, 3072), *INIT_FROM_CKPT*
I0203 00:27:07.060224 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_0/intermediate/dense/kernel:0, shape = (768, 3072), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_0/intermediate/dense/bias:0, shape = (3072,), *INIT_FROM_CKPT*
I0203 00:27:07.060294 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_0/intermediate/dense/bias:0, shape = (3072,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_0/output/dense/kernel:0, shape = (3072, 768), *INIT_FROM_CKPT*
I0203 00:27:07.060358 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_0/output/dense/kernel:0, shape = (3072, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_0/output/dense/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.060427 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_0/output/dense/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_0/output/LayerNorm/beta:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.060491 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_0/output/LayerNorm/beta:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_0/output/LayerNorm/gamma:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.060555 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_0/output/LayerNorm/gamma:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_1/attention/self/query/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
I0203 00:27:07.060619 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_1/attention/self/query/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_1/attention/self/query/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.060688 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_1/attention/self/query/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_1/attention/self/key/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
I0203 00:27:07.060753 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_1/attention/self/key/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_1/attention/self/key/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.060821 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_1/attention/self/key/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_1/attention/self/value/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
I0203 00:27:07.060889 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_1/attention/self/value/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_1/attention/self/value/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.060958 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_1/attention/self/value/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_1/attention/output/dense/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
I0203 00:27:07.061023 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_1/attention/output/dense/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_1/attention/output/dense/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.061091 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_1/attention/output/dense/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_1/attention/output/LayerNorm/beta:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.061155 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_1/attention/output/LayerNorm/beta:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_1/attention/output/LayerNorm/gamma:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.061218 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_1/attention/output/LayerNorm/gamma:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_1/intermediate/dense/kernel:0, shape = (768, 3072), *INIT_FROM_CKPT*
I0203 00:27:07.061282 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_1/intermediate/dense/kernel:0, shape = (768, 3072), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_1/intermediate/dense/bias:0, shape = (3072,), *INIT_FROM_CKPT*
I0203 00:27:07.061351 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_1/intermediate/dense/bias:0, shape = (3072,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_1/output/dense/kernel:0, shape = (3072, 768), *INIT_FROM_CKPT*
I0203 00:27:07.061415 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_1/output/dense/kernel:0, shape = (3072, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_1/output/dense/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.061484 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_1/output/dense/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_1/output/LayerNorm/beta:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.061548 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_1/output/LayerNorm/beta:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_1/output/LayerNorm/gamma:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.061612 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_1/output/LayerNorm/gamma:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_2/attention/self/query/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
I0203 00:27:07.061676 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_2/attention/self/query/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_2/attention/self/query/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.061745 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_2/attention/self/query/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_2/attention/self/key/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
I0203 00:27:07.061809 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_2/attention/self/key/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_2/attention/self/key/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.061877 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_2/attention/self/key/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_2/attention/self/value/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
I0203 00:27:07.061947 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_2/attention/self/value/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_2/attention/self/value/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.062016 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_2/attention/self/value/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_2/attention/output/dense/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
I0203 00:27:07.062082 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_2/attention/output/dense/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_2/attention/output/dense/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.062150 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_2/attention/output/dense/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_2/attention/output/LayerNorm/beta:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.062215 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_2/attention/output/LayerNorm/beta:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_2/attention/output/LayerNorm/gamma:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.062279 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_2/attention/output/LayerNorm/gamma:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_2/intermediate/dense/kernel:0, shape = (768, 3072), *INIT_FROM_CKPT*
I0203 00:27:07.062342 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_2/intermediate/dense/kernel:0, shape = (768, 3072), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_2/intermediate/dense/bias:0, shape = (3072,), *INIT_FROM_CKPT*
I0203 00:27:07.062412 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_2/intermediate/dense/bias:0, shape = (3072,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_2/output/dense/kernel:0, shape = (3072, 768), *INIT_FROM_CKPT*
I0203 00:27:07.062477 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_2/output/dense/kernel:0, shape = (3072, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_2/output/dense/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.062546 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_2/output/dense/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_2/output/LayerNorm/beta:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.062610 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_2/output/LayerNorm/beta:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_2/output/LayerNorm/gamma:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.062673 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_2/output/LayerNorm/gamma:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_3/attention/self/query/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
I0203 00:27:07.062737 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_3/attention/self/query/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_3/attention/self/query/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.062806 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_3/attention/self/query/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_3/attention/self/key/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
I0203 00:27:07.062870 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_3/attention/self/key/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_3/attention/self/key/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.062943 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_3/attention/self/key/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_3/attention/self/value/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
I0203 00:27:07.063009 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_3/attention/self/value/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_3/attention/self/value/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.063077 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_3/attention/self/value/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_3/attention/output/dense/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
I0203 00:27:07.063142 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_3/attention/output/dense/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_3/attention/output/dense/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.063209 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_3/attention/output/dense/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_3/attention/output/LayerNorm/beta:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.063273 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_3/attention/output/LayerNorm/beta:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_3/attention/output/LayerNorm/gamma:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.063336 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_3/attention/output/LayerNorm/gamma:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_3/intermediate/dense/kernel:0, shape = (768, 3072), *INIT_FROM_CKPT*
I0203 00:27:07.063399 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_3/intermediate/dense/kernel:0, shape = (768, 3072), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_3/intermediate/dense/bias:0, shape = (3072,), *INIT_FROM_CKPT*
I0203 00:27:07.063467 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_3/intermediate/dense/bias:0, shape = (3072,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_3/output/dense/kernel:0, shape = (3072, 768), *INIT_FROM_CKPT*
I0203 00:27:07.063532 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_3/output/dense/kernel:0, shape = (3072, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_3/output/dense/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.063607 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_3/output/dense/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_3/output/LayerNorm/beta:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.063673 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_3/output/LayerNorm/beta:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_3/output/LayerNorm/gamma:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.063737 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_3/output/LayerNorm/gamma:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_4/attention/self/query/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
I0203 00:27:07.063800 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_4/attention/self/query/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_4/attention/self/query/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.063869 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_4/attention/self/query/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_4/attention/self/key/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
I0203 00:27:07.063933 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_4/attention/self/key/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_4/attention/self/key/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.064005 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_4/attention/self/key/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_4/attention/self/value/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
I0203 00:27:07.064070 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_4/attention/self/value/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_4/attention/self/value/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.064185 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_4/attention/self/value/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_4/attention/output/dense/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
I0203 00:27:07.064251 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_4/attention/output/dense/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_4/attention/output/dense/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.064320 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_4/attention/output/dense/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_4/attention/output/LayerNorm/beta:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.064383 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_4/attention/output/LayerNorm/beta:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_4/attention/output/LayerNorm/gamma:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.064447 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_4/attention/output/LayerNorm/gamma:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_4/intermediate/dense/kernel:0, shape = (768, 3072), *INIT_FROM_CKPT*
I0203 00:27:07.064511 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_4/intermediate/dense/kernel:0, shape = (768, 3072), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_4/intermediate/dense/bias:0, shape = (3072,), *INIT_FROM_CKPT*
I0203 00:27:07.064580 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_4/intermediate/dense/bias:0, shape = (3072,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_4/output/dense/kernel:0, shape = (3072, 768), *INIT_FROM_CKPT*
I0203 00:27:07.064644 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_4/output/dense/kernel:0, shape = (3072, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_4/output/dense/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.064713 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_4/output/dense/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_4/output/LayerNorm/beta:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.064778 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_4/output/LayerNorm/beta:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_4/output/LayerNorm/gamma:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.064840 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_4/output/LayerNorm/gamma:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_5/attention/self/query/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
I0203 00:27:07.064904 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_5/attention/self/query/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_5/attention/self/query/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.064972 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_5/attention/self/query/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_5/attention/self/key/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
I0203 00:27:07.065040 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_5/attention/self/key/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_5/attention/self/key/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.065109 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_5/attention/self/key/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_5/attention/self/value/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
I0203 00:27:07.065174 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_5/attention/self/value/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_5/attention/self/value/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.065242 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_5/attention/self/value/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_5/attention/output/dense/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
I0203 00:27:07.065306 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_5/attention/output/dense/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_5/attention/output/dense/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.065375 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_5/attention/output/dense/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_5/attention/output/LayerNorm/beta:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.065439 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_5/attention/output/LayerNorm/beta:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_5/attention/output/LayerNorm/gamma:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.065502 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_5/attention/output/LayerNorm/gamma:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_5/intermediate/dense/kernel:0, shape = (768, 3072), *INIT_FROM_CKPT*
I0203 00:27:07.065563 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_5/intermediate/dense/kernel:0, shape = (768, 3072), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_5/intermediate/dense/bias:0, shape = (3072,), *INIT_FROM_CKPT*
I0203 00:27:07.065632 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_5/intermediate/dense/bias:0, shape = (3072,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_5/output/dense/kernel:0, shape = (3072, 768), *INIT_FROM_CKPT*
I0203 00:27:07.065697 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_5/output/dense/kernel:0, shape = (3072, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_5/output/dense/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.065766 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_5/output/dense/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_5/output/LayerNorm/beta:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.065829 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_5/output/LayerNorm/beta:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_5/output/LayerNorm/gamma:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.065893 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_5/output/LayerNorm/gamma:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_6/attention/self/query/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
I0203 00:27:07.065956 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_6/attention/self/query/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_6/attention/self/query/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.066023 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_6/attention/self/query/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_6/attention/self/key/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
I0203 00:27:07.066091 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_6/attention/self/key/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_6/attention/self/key/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.066159 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_6/attention/self/key/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_6/attention/self/value/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
I0203 00:27:07.066223 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_6/attention/self/value/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_6/attention/self/value/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.066290 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_6/attention/self/value/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_6/attention/output/dense/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
I0203 00:27:07.066354 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_6/attention/output/dense/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_6/attention/output/dense/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.066422 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_6/attention/output/dense/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_6/attention/output/LayerNorm/beta:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.066485 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_6/attention/output/LayerNorm/beta:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_6/attention/output/LayerNorm/gamma:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.066547 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_6/attention/output/LayerNorm/gamma:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_6/intermediate/dense/kernel:0, shape = (768, 3072), *INIT_FROM_CKPT*
I0203 00:27:07.066608 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_6/intermediate/dense/kernel:0, shape = (768, 3072), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_6/intermediate/dense/bias:0, shape = (3072,), *INIT_FROM_CKPT*
I0203 00:27:07.066676 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_6/intermediate/dense/bias:0, shape = (3072,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_6/output/dense/kernel:0, shape = (3072, 768), *INIT_FROM_CKPT*
I0203 00:27:07.066740 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_6/output/dense/kernel:0, shape = (3072, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_6/output/dense/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.066808 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_6/output/dense/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_6/output/LayerNorm/beta:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.066870 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_6/output/LayerNorm/beta:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_6/output/LayerNorm/gamma:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.066932 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_6/output/LayerNorm/gamma:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_7/attention/self/query/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
I0203 00:27:07.066994 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_7/attention/self/query/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_7/attention/self/query/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.067064 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_7/attention/self/query/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_7/attention/self/key/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
I0203 00:27:07.067128 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_7/attention/self/key/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_7/attention/self/key/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.067195 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_7/attention/self/key/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_7/attention/self/value/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
I0203 00:27:07.067258 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_7/attention/self/value/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_7/attention/self/value/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.067324 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_7/attention/self/value/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_7/attention/output/dense/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
I0203 00:27:07.067387 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_7/attention/output/dense/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_7/attention/output/dense/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.067454 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_7/attention/output/dense/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_7/attention/output/LayerNorm/beta:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.067517 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_7/attention/output/LayerNorm/beta:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_7/attention/output/LayerNorm/gamma:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.067579 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_7/attention/output/LayerNorm/gamma:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_7/intermediate/dense/kernel:0, shape = (768, 3072), *INIT_FROM_CKPT*
I0203 00:27:07.067659 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_7/intermediate/dense/kernel:0, shape = (768, 3072), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_7/intermediate/dense/bias:0, shape = (3072,), *INIT_FROM_CKPT*
I0203 00:27:07.067727 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_7/intermediate/dense/bias:0, shape = (3072,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_7/output/dense/kernel:0, shape = (3072, 768), *INIT_FROM_CKPT*
I0203 00:27:07.067790 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_7/output/dense/kernel:0, shape = (3072, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_7/output/dense/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.067857 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_7/output/dense/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_7/output/LayerNorm/beta:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.067919 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_7/output/LayerNorm/beta:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_7/output/LayerNorm/gamma:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.067982 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_7/output/LayerNorm/gamma:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_8/attention/self/query/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
I0203 00:27:07.068044 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_8/attention/self/query/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_8/attention/self/query/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.068154 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_8/attention/self/query/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_8/attention/self/key/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
I0203 00:27:07.068220 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_8/attention/self/key/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_8/attention/self/key/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.068287 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_8/attention/self/key/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_8/attention/self/value/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
I0203 00:27:07.068350 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_8/attention/self/value/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_8/attention/self/value/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.068418 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_8/attention/self/value/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_8/attention/output/dense/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
I0203 00:27:07.068482 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_8/attention/output/dense/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_8/attention/output/dense/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.068549 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_8/attention/output/dense/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_8/attention/output/LayerNorm/beta:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.068613 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_8/attention/output/LayerNorm/beta:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_8/attention/output/LayerNorm/gamma:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.068675 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_8/attention/output/LayerNorm/gamma:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_8/intermediate/dense/kernel:0, shape = (768, 3072), *INIT_FROM_CKPT*
I0203 00:27:07.068738 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_8/intermediate/dense/kernel:0, shape = (768, 3072), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_8/intermediate/dense/bias:0, shape = (3072,), *INIT_FROM_CKPT*
I0203 00:27:07.068805 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_8/intermediate/dense/bias:0, shape = (3072,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_8/output/dense/kernel:0, shape = (3072, 768), *INIT_FROM_CKPT*
I0203 00:27:07.068868 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_8/output/dense/kernel:0, shape = (3072, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_8/output/dense/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.068935 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_8/output/dense/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_8/output/LayerNorm/beta:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.068997 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_8/output/LayerNorm/beta:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_8/output/LayerNorm/gamma:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.069059 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_8/output/LayerNorm/gamma:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_9/attention/self/query/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
I0203 00:27:07.069125 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_9/attention/self/query/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_9/attention/self/query/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.069194 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_9/attention/self/query/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_9/attention/self/key/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
I0203 00:27:07.069257 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_9/attention/self/key/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_9/attention/self/key/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.069324 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_9/attention/self/key/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_9/attention/self/value/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
I0203 00:27:07.069387 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_9/attention/self/value/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_9/attention/self/value/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.069454 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_9/attention/self/value/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_9/attention/output/dense/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
I0203 00:27:07.069517 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_9/attention/output/dense/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_9/attention/output/dense/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.069584 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_9/attention/output/dense/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_9/attention/output/LayerNorm/beta:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.069646 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_9/attention/output/LayerNorm/beta:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_9/attention/output/LayerNorm/gamma:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.069708 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_9/attention/output/LayerNorm/gamma:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_9/intermediate/dense/kernel:0, shape = (768, 3072), *INIT_FROM_CKPT*
I0203 00:27:07.069770 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_9/intermediate/dense/kernel:0, shape = (768, 3072), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_9/intermediate/dense/bias:0, shape = (3072,), *INIT_FROM_CKPT*
I0203 00:27:07.069837 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_9/intermediate/dense/bias:0, shape = (3072,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_9/output/dense/kernel:0, shape = (3072, 768), *INIT_FROM_CKPT*
I0203 00:27:07.069899 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_9/output/dense/kernel:0, shape = (3072, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_9/output/dense/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.069965 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_9/output/dense/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_9/output/LayerNorm/beta:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.070028 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_9/output/LayerNorm/beta:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_9/output/LayerNorm/gamma:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.070090 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_9/output/LayerNorm/gamma:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_10/attention/self/query/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
I0203 00:27:07.070157 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_10/attention/self/query/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_10/attention/self/query/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.070225 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_10/attention/self/query/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_10/attention/self/key/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
I0203 00:27:07.070290 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_10/attention/self/key/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_10/attention/self/key/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.070358 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_10/attention/self/key/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_10/attention/self/value/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
I0203 00:27:07.070423 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_10/attention/self/value/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_10/attention/self/value/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.070491 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_10/attention/self/value/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_10/attention/output/dense/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
I0203 00:27:07.070555 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_10/attention/output/dense/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_10/attention/output/dense/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.070622 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_10/attention/output/dense/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_10/attention/output/LayerNorm/beta:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.070686 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_10/attention/output/LayerNorm/beta:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_10/attention/output/LayerNorm/gamma:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.070749 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_10/attention/output/LayerNorm/gamma:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_10/intermediate/dense/kernel:0, shape = (768, 3072), *INIT_FROM_CKPT*
I0203 00:27:07.070812 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_10/intermediate/dense/kernel:0, shape = (768, 3072), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_10/intermediate/dense/bias:0, shape = (3072,), *INIT_FROM_CKPT*
I0203 00:27:07.070879 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_10/intermediate/dense/bias:0, shape = (3072,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_10/output/dense/kernel:0, shape = (3072, 768), *INIT_FROM_CKPT*
I0203 00:27:07.070944 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_10/output/dense/kernel:0, shape = (3072, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_10/output/dense/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.071012 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_10/output/dense/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_10/output/LayerNorm/beta:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.071075 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_10/output/LayerNorm/beta:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_10/output/LayerNorm/gamma:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.071143 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_10/output/LayerNorm/gamma:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_11/attention/self/query/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
I0203 00:27:07.071208 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_11/attention/self/query/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_11/attention/self/query/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.071277 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_11/attention/self/query/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_11/attention/self/key/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
I0203 00:27:07.071341 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_11/attention/self/key/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_11/attention/self/key/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.071409 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_11/attention/self/key/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_11/attention/self/value/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
I0203 00:27:07.071474 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_11/attention/self/value/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_11/attention/self/value/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.071543 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_11/attention/self/value/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_11/attention/output/dense/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
I0203 00:27:07.071614 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_11/attention/output/dense/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_11/attention/output/dense/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.071685 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_11/attention/output/dense/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_11/attention/output/LayerNorm/beta:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.071748 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_11/attention/output/LayerNorm/beta:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_11/attention/output/LayerNorm/gamma:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.071810 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_11/attention/output/LayerNorm/gamma:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_11/intermediate/dense/kernel:0, shape = (768, 3072), *INIT_FROM_CKPT*
I0203 00:27:07.071873 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_11/intermediate/dense/kernel:0, shape = (768, 3072), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_11/intermediate/dense/bias:0, shape = (3072,), *INIT_FROM_CKPT*
I0203 00:27:07.071940 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_11/intermediate/dense/bias:0, shape = (3072,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_11/output/dense/kernel:0, shape = (3072, 768), *INIT_FROM_CKPT*
I0203 00:27:07.072005 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_11/output/dense/kernel:0, shape = (3072, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_11/output/dense/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.072073 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_11/output/dense/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_11/output/LayerNorm/beta:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.072178 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_11/output/LayerNorm/beta:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/encoder/layer_11/output/LayerNorm/gamma:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.072244 139887672751936 run_classifier.py:710]   name = bert/encoder/layer_11/output/LayerNorm/gamma:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/pooler/dense/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
I0203 00:27:07.072308 139887672751936 run_classifier.py:710]   name = bert/pooler/dense/kernel:0, shape = (768, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = bert/pooler/dense/bias:0, shape = (768,), *INIT_FROM_CKPT*
I0203 00:27:07.072375 139887672751936 run_classifier.py:710]   name = bert/pooler/dense/bias:0, shape = (768,), *INIT_FROM_CKPT*
INFO:tensorflow:  name = output_weights:0, shape = (2, 768), *INIT_FROM_CKPT*
I0203 00:27:07.072438 139887672751936 run_classifier.py:710]   name = output_weights:0, shape = (2, 768), *INIT_FROM_CKPT*
INFO:tensorflow:  name = output_bias:0, shape = (2,), *INIT_FROM_CKPT*
I0203 00:27:07.072506 139887672751936 run_classifier.py:710]   name = output_bias:0, shape = (2,), *INIT_FROM_CKPT*
INFO:tensorflow:Done calling model_fn.
I0203 00:27:07.072808 139887672751936 estimator.py:1147] Done calling model_fn.
WARNING:tensorflow:From /home/fyp19020/.local/lib/python3.6/site-packages/tensorflow/python/ops/array_ops.py:1354: add_dispatch_support.<locals>.wrapper (from tensorflow.python.ops.array_ops) is deprecated and will be removed in a future version.
Instructions for updating:
Use tf.where in 2.0, which has the same broadcast rule as np.where
W0203 00:27:07.281864 139887672751936 deprecation.py:323] From /home/fyp19020/.local/lib/python3.6/site-packages/tensorflow/python/ops/array_ops.py:1354: add_dispatch_support.<locals>.wrapper (from tensorflow.python.ops.array_ops) is deprecated and will be removed in a future version.
Instructions for updating:
Use tf.where in 2.0, which has the same broadcast rule as np.where
INFO:tensorflow:Graph was finalized.
I0203 00:27:07.620687 139887672751936 monitored_session.py:240] Graph was finalized.
2020-02-03 00:27:07.621009: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA
2020-02-03 00:27:07.743637: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 3591700000 Hz
2020-02-03 00:27:07.743954: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x46758b0 executing computations on platform Host. Devices:
2020-02-03 00:27:07.743973: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): <undefined>, <undefined>
2020-02-03 00:27:08.139339: W tensorflow/compiler/jit/mark_for_compilation_pass.cc:1412] (One-time warning): Not using XLA:CPU for cluster because envvar TF_XLA_FLAGS=--tf_xla_cpu_global_jit was not set.  If you want XLA:CPU, either set that envvar, or use experimental_jit_scope to enable XLA:CPU.  To confirm that XLA is active, pass --vmodule=xla_compilation_cache=1 (as a proper command-line flag, not via TF_XLA_FLAGS) or set the envvar XLA_FLAGS=--xla_hlo_profile.
2020-02-03 00:27:09.703221: W tensorflow/core/framework/allocator.cc:107] Allocation of 367248384 exceeds 10% of system memory.
INFO:tensorflow:Running local_init_op.
I0203 00:27:12.381651 139887672751936 session_manager.py:500] Running local_init_op.
INFO:tensorflow:Done running local_init_op.
I0203 00:27:12.418493 139887672751936 session_manager.py:502] Done running local_init_op.
INFO:tensorflow:prediction_loop marked as finished
I0203 00:32:59.732618 139887672751936 error_handling.py:96] prediction_loop marked as finished
Traceback (most recent call last):
  File "/home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/test_bert/run_classifier.py", line 1023, in <module>
    tf.app.run()
  File "/home/fyp19020/.local/lib/python3.6/site-packages/tensorflow/python/platform/app.py", line 40, in run
    _run(main=main, argv=argv, flags_parser=_parse_flags_tolerate_undef)
  File "/home/fyp19020/.local/lib/python3.6/site-packages/absl/app.py", line 299, in run
    _run_main(main, args)
  File "/home/fyp19020/.local/lib/python3.6/site-packages/absl/app.py", line 250, in _run_main
    sys.exit(main(argv))
  File "/home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/test_bert/run_classifier.py", line 1005, in main
    for (i, prediction) in enumerate(result):
  File "/home/fyp19020/.local/lib/python3.6/site-packages/tensorflow_estimator/python/estimator/tpu/tpu_estimator.py", line 2913, in predict
    yield_single_examples=yield_single_examples):
  File "/home/fyp19020/.local/lib/python3.6/site-packages/tensorflow_estimator/python/estimator/estimator.py", line 637, in predict
    preds_evaluated = mon_sess.run(predictions)
  File "/home/fyp19020/.local/lib/python3.6/site-packages/tensorflow/python/training/monitored_session.py", line 754, in run
    run_metadata=run_metadata)
  File "/home/fyp19020/.local/lib/python3.6/site-packages/tensorflow/python/training/monitored_session.py", line 1252, in run
    run_metadata=run_metadata)
  File "/home/fyp19020/.local/lib/python3.6/site-packages/tensorflow/python/training/monitored_session.py", line 1338, in run
    return self._sess.run(*args, **kwargs)
  File "/home/fyp19020/.local/lib/python3.6/site-packages/tensorflow/python/training/monitored_session.py", line 1411, in run
    run_metadata=run_metadata)
  File "/home/fyp19020/.local/lib/python3.6/site-packages/tensorflow/python/training/monitored_session.py", line 1169, in run
    return self._sess.run(*args, **kwargs)
  File "/home/fyp19020/.local/lib/python3.6/site-packages/tensorflow/python/client/session.py", line 950, in run
    run_metadata_ptr)
  File "/home/fyp19020/.local/lib/python3.6/site-packages/tensorflow/python/client/session.py", line 1173, in _run
    feed_dict_tensor, options, run_metadata)
  File "/home/fyp19020/.local/lib/python3.6/site-packages/tensorflow/python/client/session.py", line 1350, in _do_run
    run_metadata)
  File "/home/fyp19020/.local/lib/python3.6/site-packages/tensorflow/python/client/session.py", line 1356, in _do_call
    return fn(*args)
  File "/home/fyp19020/.local/lib/python3.6/site-packages/tensorflow/python/client/session.py", line 1341, in _run_fn
    options, feed_dict, fetch_list, target_list, run_metadata)
  File "/home/fyp19020/.local/lib/python3.6/site-packages/tensorflow/python/client/session.py", line 1429, in _call_tf_sessionrun
    run_metadata)
KeyboardInterrupt
/home/fyp19020/.local/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:516: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint8 = np.dtype([("qint8", np.int8, 1)])
/home/fyp19020/.local/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:517: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint8 = np.dtype([("quint8", np.uint8, 1)])
/home/fyp19020/.local/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:518: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint16 = np.dtype([("qint16", np.int16, 1)])
/home/fyp19020/.local/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:519: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint16 = np.dtype([("quint16", np.uint16, 1)])
/home/fyp19020/.local/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:520: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint32 = np.dtype([("qint32", np.int32, 1)])
/home/fyp19020/.local/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:525: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  np_resource = np.dtype([("resource", np.ubyte, 1)])
/home/fyp19020/.local/lib/python3.6/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:541: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint8 = np.dtype([("qint8", np.int8, 1)])
/home/fyp19020/.local/lib/python3.6/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:542: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint8 = np.dtype([("quint8", np.uint8, 1)])
/home/fyp19020/.local/lib/python3.6/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:543: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint16 = np.dtype([("qint16", np.int16, 1)])
/home/fyp19020/.local/lib/python3.6/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:544: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint16 = np.dtype([("quint16", np.uint16, 1)])
/home/fyp19020/.local/lib/python3.6/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:545: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint32 = np.dtype([("qint32", np.int32, 1)])
/home/fyp19020/.local/lib/python3.6/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:550: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  np_resource = np.dtype([("resource", np.ubyte, 1)])
WARNING:tensorflow:From /home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/test_bert/optimization.py:87: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.

WARNING:tensorflow:From /home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/test_bert/run_classifier.py:1023: The name tf.app.run is deprecated. Please use tf.compat.v1.app.run instead.

WARNING:tensorflow:From /home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/test_bert/run_classifier.py:825: The name tf.logging.set_verbosity is deprecated. Please use tf.compat.v1.logging.set_verbosity instead.

W0203 00:33:12.387568 140557293537088 deprecation_wrapper.py:119] From /home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/test_bert/run_classifier.py:825: The name tf.logging.set_verbosity is deprecated. Please use tf.compat.v1.logging.set_verbosity instead.

WARNING:tensorflow:From /home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/test_bert/run_classifier.py:825: The name tf.logging.INFO is deprecated. Please use tf.compat.v1.logging.INFO instead.

W0203 00:33:12.387702 140557293537088 deprecation_wrapper.py:119] From /home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/test_bert/run_classifier.py:825: The name tf.logging.INFO is deprecated. Please use tf.compat.v1.logging.INFO instead.

WARNING:tensorflow:From /home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/test_bert/modeling.py:93: The name tf.gfile.GFile is deprecated. Please use tf.io.gfile.GFile instead.

W0203 00:33:12.388013 140557293537088 deprecation_wrapper.py:119] From /home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/test_bert/modeling.py:93: The name tf.gfile.GFile is deprecated. Please use tf.io.gfile.GFile instead.

WARNING:tensorflow:From /home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/test_bert/run_classifier.py:850: The name tf.gfile.MakeDirs is deprecated. Please use tf.io.gfile.makedirs instead.

W0203 00:33:12.388433 140557293537088 deprecation_wrapper.py:119] From /home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/test_bert/run_classifier.py:850: The name tf.gfile.MakeDirs is deprecated. Please use tf.io.gfile.makedirs instead.

WARNING:tensorflow:
The TensorFlow contrib module will not be included in TensorFlow 2.0.
For more information, please see:
  * https://github.com/tensorflow/community/blob/master/rfcs/20180907-contrib-sunset.md
  * https://github.com/tensorflow/addons
  * https://github.com/tensorflow/io (for I/O related ops)
If you depend on functionality not listed there, please file an issue.

W0203 00:33:12.983975 140557293537088 lazy_loader.py:50] 
The TensorFlow contrib module will not be included in TensorFlow 2.0.
For more information, please see:
  * https://github.com/tensorflow/community/blob/master/rfcs/20180907-contrib-sunset.md
  * https://github.com/tensorflow/addons
  * https://github.com/tensorflow/io (for I/O related ops)
If you depend on functionality not listed there, please file an issue.

WARNING:tensorflow:Estimator's model_fn (<function model_fn_builder.<locals>.model_fn at 0x7fd5dec818c8>) includes params argument, but params are not passed to Estimator.
W0203 00:33:12.984492 140557293537088 estimator.py:1984] Estimator's model_fn (<function model_fn_builder.<locals>.model_fn at 0x7fd5dec818c8>) includes params argument, but params are not passed to Estimator.
INFO:tensorflow:Using config: {'_model_dir': '/home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/data/bert_result', '_tf_random_seed': None, '_save_summary_steps': 100, '_save_checkpoints_steps': 1000, '_save_checkpoints_secs': None, '_session_config': allow_soft_placement: true
graph_options {
  rewrite_options {
    meta_optimizer_iterations: ONE
  }
}
, '_keep_checkpoint_max': 5, '_keep_checkpoint_every_n_hours': 10000, '_log_step_count_steps': None, '_train_distribute': None, '_device_fn': None, '_protocol': None, '_eval_distribute': None, '_experimental_distribute': None, '_experimental_max_worker_delay_secs': None, '_service': None, '_cluster_spec': <tensorflow.python.training.server_lib.ClusterSpec object at 0x7fd5daf39b00>, '_task_type': 'worker', '_task_id': 0, '_global_id_in_cluster': 0, '_master': '', '_evaluation_master': '', '_is_chief': True, '_num_ps_replicas': 0, '_num_worker_replicas': 1, '_tpu_config': TPUConfig(iterations_per_loop=1000, num_shards=8, num_cores_per_replica=None, per_host_input_for_training=3, tpu_job_name=None, initial_infeed_sleep_secs=None, input_partition_dims=None, eval_training_input_configuration=2), '_cluster': None}
I0203 00:33:12.985332 140557293537088 estimator.py:209] Using config: {'_model_dir': '/home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/data/bert_result', '_tf_random_seed': None, '_save_summary_steps': 100, '_save_checkpoints_steps': 1000, '_save_checkpoints_secs': None, '_session_config': allow_soft_placement: true
graph_options {
  rewrite_options {
    meta_optimizer_iterations: ONE
  }
}
, '_keep_checkpoint_max': 5, '_keep_checkpoint_every_n_hours': 10000, '_log_step_count_steps': None, '_train_distribute': None, '_device_fn': None, '_protocol': None, '_eval_distribute': None, '_experimental_distribute': None, '_experimental_max_worker_delay_secs': None, '_service': None, '_cluster_spec': <tensorflow.python.training.server_lib.ClusterSpec object at 0x7fd5daf39b00>, '_task_type': 'worker', '_task_id': 0, '_global_id_in_cluster': 0, '_master': '', '_evaluation_master': '', '_is_chief': True, '_num_ps_replicas': 0, '_num_worker_replicas': 1, '_tpu_config': TPUConfig(iterations_per_loop=1000, num_shards=8, num_cores_per_replica=None, per_host_input_for_training=3, tpu_job_name=None, initial_infeed_sleep_secs=None, input_partition_dims=None, eval_training_input_configuration=2), '_cluster': None}
INFO:tensorflow:_TPUContext: eval_on_tpu True
I0203 00:33:12.985754 140557293537088 tpu_context.py:209] _TPUContext: eval_on_tpu True
WARNING:tensorflow:eval_on_tpu ignored because use_tpu is False.
W0203 00:33:12.986042 140557293537088 tpu_context.py:211] eval_on_tpu ignored because use_tpu is False.
WARNING:tensorflow:From /home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/test_bert/run_classifier.py:524: The name tf.python_io.TFRecordWriter is deprecated. Please use tf.io.TFRecordWriter instead.

W0203 00:33:13.371156 140557293537088 deprecation_wrapper.py:119] From /home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/test_bert/run_classifier.py:524: The name tf.python_io.TFRecordWriter is deprecated. Please use tf.io.TFRecordWriter instead.

WARNING:tensorflow:From /home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/test_bert/run_classifier.py:528: The name tf.logging.info is deprecated. Please use tf.compat.v1.logging.info instead.

W0203 00:33:13.375544 140557293537088 deprecation_wrapper.py:119] From /home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/test_bert/run_classifier.py:528: The name tf.logging.info is deprecated. Please use tf.compat.v1.logging.info instead.

INFO:tensorflow:Writing example 0 of 137648
I0203 00:33:13.375644 140557293537088 run_classifier.py:528] Writing example 0 of 137648
INFO:tensorflow:*** Example ***
I0203 00:33:13.376047 140557293537088 run_classifier.py:502] *** Example ***
INFO:tensorflow:guid: test-0
I0203 00:33:13.376160 140557293537088 run_classifier.py:503] guid: test-0
INFO:tensorflow:tokens: [CLS] " | live now | # nye # count ##down plus # fire ##works in # taip ##ei # meer ##kat http : / / m ##rk . tv / 1 ##k ##w ##f ##v ##7 ##7 " [SEP]
I0203 00:33:13.376230 140557293537088 run_classifier.py:505] tokens: [CLS] " | live now | # nye # count ##down plus # fire ##works in # taip ##ei # meer ##kat http : / / m ##rk . tv / 1 ##k ##w ##f ##v ##7 ##7 " [SEP]
INFO:tensorflow:input_ids: 101 107 196 12962 11858 196 108 17731 108 47777 27160 10563 108 13559 51778 10106 108 25943 11998 108 12705 14735 10556 131 120 120 181 16299 119 19767 120 122 10174 10874 10575 10477 11305 11305 107 102 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
I0203 00:33:13.376321 140557293537088 run_classifier.py:506] input_ids: 101 107 196 12962 11858 196 108 17731 108 47777 27160 10563 108 13559 51778 10106 108 25943 11998 108 12705 14735 10556 131 120 120 181 16299 119 19767 120 122 10174 10874 10575 10477 11305 11305 107 102 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
INFO:tensorflow:input_mask: 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
I0203 00:33:13.376386 140557293537088 run_classifier.py:507] input_mask: 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
INFO:tensorflow:segment_ids: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
I0203 00:33:13.376446 140557293537088 run_classifier.py:508] segment_ids: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
INFO:tensorflow:label: 0 (id = 0)
I0203 00:33:13.376494 140557293537088 run_classifier.py:509] label: 0 (id = 0)
INFO:tensorflow:*** Example ***
I0203 00:33:13.377155 140557293537088 run_classifier.py:502] *** Example ***
INFO:tensorflow:guid: test-1
I0203 00:33:13.377231 140557293537088 run_classifier.py:503] guid: test-1
INFO:tensorflow:tokens: [CLS] " wish ##ing everyone a very # happy ##ne ##wy ##ear # 2016 ! # who ##tel # sp ##gli ##fe # taip ##ei @ w taip ##ei https : / / www . ins ##tag ##ram . com / p / _ 9 ##k ##p ##7 ##em ##0 ##km / " [SEP]
I0203 00:33:13.377320 140557293537088 run_classifier.py:505] tokens: [CLS] " wish ##ing everyone a very # happy ##ne ##wy ##ear # 2016 ! # who ##tel # sp ##gli ##fe # taip ##ei @ w taip ##ei https : / / www . ins ##tag ##ram . com / p / _ 9 ##k ##p ##7 ##em ##0 ##km / " [SEP]
INFO:tensorflow:input_ids: 101 107 66069 10230 48628 169 12558 108 54214 10238 12524 34321 108 10255 106 108 10479 15636 108 32650 20986 14601 108 25943 11998 137 191 25943 11998 14120 131 120 120 10494 119 15498 24603 13845 119 10212 120 184 120 168 130 10174 10410 11305 10451 10929 23440 120 107 102 0 0 0 0 0 0 0 0 0 0
I0203 00:33:13.377388 140557293537088 run_classifier.py:506] input_ids: 101 107 66069 10230 48628 169 12558 108 54214 10238 12524 34321 108 10255 106 108 10479 15636 108 32650 20986 14601 108 25943 11998 137 191 25943 11998 14120 131 120 120 10494 119 15498 24603 13845 119 10212 120 184 120 168 130 10174 10410 11305 10451 10929 23440 120 107 102 0 0 0 0 0 0 0 0 0 0
INFO:tensorflow:input_mask: 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0
I0203 00:33:13.377461 140557293537088 run_classifier.py:507] input_mask: 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0
INFO:tensorflow:segment_ids: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
I0203 00:33:13.377521 140557293537088 run_classifier.py:508] segment_ids: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
INFO:tensorflow:label: 0 (id = 0)
I0203 00:33:13.377570 140557293537088 run_classifier.py:509] label: 0 (id = 0)
INFO:tensorflow:*** Example ***
I0203 00:33:13.377859 140557293537088 run_classifier.py:502] *** Example ***
INFO:tensorflow:guid: test-2
I0203 00:33:13.377930 140557293537088 run_classifier.py:503] guid: test-2
INFO:tensorflow:tokens: [CLS] " by ##e by ##e # 2015 [SEP]
I0203 00:33:13.377985 140557293537088 run_classifier.py:505] tokens: [CLS] " by ##e by ##e # 2015 [SEP]
INFO:tensorflow:input_ids: 101 107 10155 10112 10155 10112 108 10222 102 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
I0203 00:33:13.378046 140557293537088 run_classifier.py:506] input_ids: 101 107 10155 10112 10155 10112 108 10222 102 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
INFO:tensorflow:input_mask: 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
I0203 00:33:13.378106 140557293537088 run_classifier.py:507] input_mask: 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
INFO:tensorflow:segment_ids: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
I0203 00:33:13.378162 140557293537088 run_classifier.py:508] segment_ids: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
INFO:tensorflow:label: 0 (id = 0)
I0203 00:33:13.378209 140557293537088 run_classifier.py:509] label: 0 (id = 0)
INFO:tensorflow:*** Example ***
I0203 00:33:13.378496 140557293537088 run_classifier.py:502] *** Example ***
INFO:tensorflow:guid: test-3
I0203 00:33:13.378569 140557293537088 run_classifier.py:503] guid: test-3
INFO:tensorflow:tokens: [CLS] hi # 2016 [SEP]
I0203 00:33:13.378625 140557293537088 run_classifier.py:505] tokens: [CLS] hi # 2016 [SEP]
INFO:tensorflow:input_ids: 101 11520 108 10255 102 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
I0203 00:33:13.378687 140557293537088 run_classifier.py:506] input_ids: 101 11520 108 10255 102 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
INFO:tensorflow:input_mask: 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
I0203 00:33:13.378749 140557293537088 run_classifier.py:507] input_mask: 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
INFO:tensorflow:segment_ids: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
I0203 00:33:13.378815 140557293537088 run_classifier.py:508] segment_ids: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
INFO:tensorflow:label: 0 (id = 0)
I0203 00:33:13.378865 140557293537088 run_classifier.py:509] label: 0 (id = 0)
INFO:tensorflow:*** Example ***
I0203 00:33:13.379127 140557293537088 run_classifier.py:502] *** Example ***
INFO:tensorflow:guid: test-4
I0203 00:33:13.379197 140557293537088 run_classifier.py:503] guid: test-4
INFO:tensorflow:tokens: [CLS] 倒 數 開 始 [SEP]
I0203 00:33:13.379253 140557293537088 run_classifier.py:505] tokens: [CLS] 倒 數 開 始 [SEP]
INFO:tensorflow:input_ids: 101 2336 4310 8133 3268 102 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
I0203 00:33:13.379318 140557293537088 run_classifier.py:506] input_ids: 101 2336 4310 8133 3268 102 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
INFO:tensorflow:input_mask: 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
I0203 00:33:13.379379 140557293537088 run_classifier.py:507] input_mask: 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
INFO:tensorflow:segment_ids: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
I0203 00:33:13.379437 140557293537088 run_classifier.py:508] segment_ids: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
INFO:tensorflow:label: 0 (id = 0)
I0203 00:33:13.379485 140557293537088 run_classifier.py:509] label: 0 (id = 0)
INFO:tensorflow:Writing example 10000 of 137648
I0203 00:33:16.913783 140557293537088 run_classifier.py:528] Writing example 10000 of 137648
INFO:tensorflow:Writing example 20000 of 137648
I0203 00:33:20.285597 140557293537088 run_classifier.py:528] Writing example 20000 of 137648
INFO:tensorflow:Writing example 30000 of 137648
I0203 00:33:23.696826 140557293537088 run_classifier.py:528] Writing example 30000 of 137648
INFO:tensorflow:Writing example 40000 of 137648
I0203 00:33:26.904211 140557293537088 run_classifier.py:528] Writing example 40000 of 137648
INFO:tensorflow:Writing example 50000 of 137648
I0203 00:33:30.268900 140557293537088 run_classifier.py:528] Writing example 50000 of 137648
Traceback (most recent call last):
  File "/home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/test_bert/run_classifier.py", line 1023, in <module>
    tf.app.run()
  File "/home/fyp19020/.local/lib/python3.6/site-packages/tensorflow/python/platform/app.py", line 40, in run
    _run(main=main, argv=argv, flags_parser=_parse_flags_tolerate_undef)
  File "/home/fyp19020/.local/lib/python3.6/site-packages/absl/app.py", line 299, in run
    _run_main(main, args)
  File "/home/fyp19020/.local/lib/python3.6/site-packages/absl/app.py", line 250, in _run_main
    sys.exit(main(argv))
  File "/home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/test_bert/run_classifier.py", line 984, in main
    predict_file)
  File "/home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/test_bert/run_classifier.py", line 531, in file_based_convert_examples_to_features
    max_seq_length, tokenizer)
  File "/home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/test_bert/run_classifier.py", line 434, in convert_single_example
    tokens_a = tokenizer.tokenize(example.text_a)
  File "/home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/test_bert/tokenization.py", line 172, in tokenize
    for token in self.basic_tokenizer.tokenize(text):
  File "/home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/test_bert/tokenization.py", line 214, in tokenize
    token = self._run_strip_accents(token)
  File "/home/fyp19020/BERT-fine-tuning-for-twitter-sentiment-analysis/test_bert/tokenization.py", line 225, in _run_strip_accents
    cat = unicodedata.category(char)
KeyboardInterrupt
